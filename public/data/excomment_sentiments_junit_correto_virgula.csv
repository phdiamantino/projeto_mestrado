reference,date,repository,filename,score,value,comment_cleaned,sentiment
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,5.2,1,throw exception manually we have to throw the exception manually,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,textui/TestRunner.java,4.0,1,runs single test collects results method used start test run program pre public static void main string args testtextuitestrunnerrunsuite pre run a single test and collect it result this method can be used to start a test run from your program pre public static void main string args testtextuitestrunnerrunsuite pre,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,5.0,1,interface define test suite loaded an interface to define how a test suite should be loaded,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,3.0,1,tests whether test error test whether a test wa an error,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,0,0,,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/TestSuite.java,5.5,1,returns test fail log warning message return a test which will fail and log a warning message,-1
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/TestCase.java,8.0,1,test case defines fixture run multiple tests define test casebr implement subclass testcasebr define instance variables store state fixturebr initialize fixture state overriding codesetupcodebr cleanup test overriding codeteardowncodebr test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling codeasserttruecode boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement coderuntestcode dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr implement a subclass of testcasebr define instance variable that store the state of the fixturebr initialize the fixture state by overriding codesetupcodebr cleanup after a test by overriding codeteardowncodebr each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling codeasserttruecode with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement coderuntestcode it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/TestResult.java,1.5,1,codetestresultcode collects results executing test case instance collecting parameter pattern test framework distinguishes ifailuresi ierrorsi failure anticipated checked assertions errors unanticipated problems like codearrayindexoutofboundsexceptioncode see test a codetestresultcode collect the result of executing a test case it is an instance of the collecting parameter pattern the test framework distinguishes between ifailuresi and ierrorsi a failure is anticipated and checked for with assertion error are unanticipated problem like an codearrayindexoutofboundsexceptioncode see test,-1
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,5.0,1,execute test method expecting exception class fexpected one subclasses thrown execute the test method expecting that an exception of class fexpected or one of it subclass will be thrown,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,samples/money/Money.java,6.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,14.0,1,custom class loader enables reloading classes test run class loader configured list package paths excluded loading loading packages delegated system class loader shared across test runs p list excluded package paths specified properties file excludedproperties located place testcaseclassloader class p bknown limitationb testcaseclassloader cannot load classes jar files a custom class loader which enables the reloading of class for each test run the class loader can be configured with a list of package path that should be excluded from loading the loading of these package is delegated to the system class loader they will be shared across test run p the list of excluded package path is specified in a property file excludedproperties that is located in the same place a the testcaseclassloader class p bknown limitationb the testcaseclassloader cannot load class from jar file,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/TestListener.java,3.0,1,error occurred an error occurred,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,3.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/Assert.java,6.0,1,set assert methods messages displayed assert fails a set of assert method message are only displayed when an assert fails,-1
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,4.0,1,interface accessing test run context test run views use interface rather accessing testrunner directly the interface for accessing the test run context test run view should use this interface rather than accessing the testrunner directly,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,3.5,1,calling deprecated save method enable compiling calling of the deprecated save method to enable compiling under,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/Protectable.java,4.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,4.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,5.2,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,swingui/TestRunner.java,2.5,1,fails first time fails the first time,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r3.8.2,2004-12-28,5a932d02b8a9f956ba503603,framework/Test.java,5.0,1,counts number test cases run test count the number of test case that will be run by this test,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,10.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,2.5,1,optionally specify codetimeoutcode milliseconds cause test method fail takes longer number milliseconds optionally specify codetimeoutcode in millisecond to cause a test method to fail if it take longer than that number of millisecond,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,3.0,1,returns one throwables led initialization error return one or more throwables that led to this initialization error,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings inspired patch alex chaffee alexpurpletechcom thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string inspired by a patch from alex chaffee alexpurpletechcom,1
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,3.759,1,todo mar pm grows without bound todo mar pm this grows without bound,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,3.759,1,todo feb pm v todo feb pm v,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,5.0,1,informs result test started informs the result that a test will be started,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,4.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,3.759,1,todo nov pm flaky todo nov pm flaky,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,8.5,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,5.0,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,3.759,1,todo feb pm v todo feb pm v,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,17.5,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,3.759,1,todo create testsystem instead todo create a testsystem instead,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,8.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,13.5,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,6.0,1,returns link statement run nonoverridden code afterclass methods class superclasses executing code statement afterclass methods always executed exceptions thrown previous steps combined necessary exceptions afterclass methods link multiplefailureexception return a link statement run all nonoverridden code afterclass method on this class and superclass before executing code statement all afterclass method are always executed exception thrown by previous step are combined if necessary with exception from afterclass method into a link multiplefailureexception,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,6.0,1,fails test given message param message identifying message link assertionerror codenullcode okay see assertionerror fails a test with the given message param message the identifying message for the link assertionerror codenullcode okay see assertionerror,-1
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,3.759,1,todo feb pm v todo feb pm v,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,5.2,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,4.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,6.0,1,subclasses implement item already checked specific type never null subclass should implement this the item will already have been checked for the specific type and will never be null,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,5.0,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static collectionampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest testhereshowyougetvalue type value assertanswerkeynew object fibonacci assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static collectionampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest testhereshowyougetvalue type value assertanswerkeynew object fibonacci assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,4.0,1,returns request whose tests run certain order defined codecomparatorcode example code run test suite alphabetical order preprivate static comparatordescription forwardreturn new comparatordescriptionpublic int comparedescription description oreturn ogetdisplaynamecomparetoogetdisplaynamepublic static mainnew junitcorerunrequestaclassalltestsclasssortwithforward pre param comparator definition order tests request return request ordered tests return a request whose test can be run in a certain order defined by codecomparatorcode for example here is code to run a test suite in alphabetical order preprivate static comparatordescription forwardreturn new comparatordescriptionpublic int comparedescription o description oreturn ogetdisplaynamecomparetoogetdisplaynamepublic static mainnew junitcorerunrequestaclassalltestsclasssortwithforward pre param comparator definition of the order of the test in this request return a request with ordered test,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,6.5,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,6.0,1,returns link statement run nonoverridden code methods class superclasses running code next methods always executed exceptions thrown previous steps combined necessary exceptions methods link multiplefailureexception return a link statement run all nonoverridden code after method on this class and superclass before running code next all after method are always executed exception thrown by previous step are combined if necessary with exception from after method into a link multiplefailureexception,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,5.0,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,9.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,5.0,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,4.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,3.759,1,todo nov pm extract todo nov pm extract,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,12.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,3.0,1,always returns runner even one prints error instead running tests param testclass class run return runner always return a runner even if it is just one that print an error instead of running test param testclass class to be run return a runner,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,11.0,1,test case obsolete since compiler catch error testnotestcaseclass test new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful this test case is obsolete since the compiler will catch this error in testnotestcaseclass test t new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,3.759,1,todo feb pm v todo feb pm v,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,4.0,1,pa codedescriptioncode describes test run run codedescriptionscode atomic single test compound containing children tests codedescriptionscode used provide feedback tests run example tree view visible many ides tests run example failures viewp pcodedescriptionscode implemented single class rather composite entirely informational contain logic aside counting testsp pin past used raw link junitframeworktestcases link junitframeworktestsuites display tree tests longer viable junit atomic tests longer superclass link object needed way pass class name together description emerged thisp see orgjunitrunnerrequest see orgjunitrunnerrunner pa codedescriptioncode describes a test which is to be run or ha been run codedescriptionscode can be atomic a single test or compound containing child test codedescriptionscode are used to provide feedback about the test that are about to run for example the tree view visible in many ides or test that have been run for example the failure viewp pcodedescriptionscode are implemented a a single class rather than a composite because they are entirely informational they contain no logic aside from counting their testsp pin the past we used the raw link junitframeworktestcases and link junitframeworktestsuites to display the tree of test this wa no longer viable in junit because atomic test no longer have a superclass below link object we needed a way to pas a class and name together description emerged from thisp see orgjunitrunnerrequest see orgjunitrunnerrunner,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,9.0,1,write custom runners may need notify junit progress running tests invoking coderunnotifiercode passed implementation link orgjunitrunnerrunnerrunrunnotifier future evolution class likely move link firetestrunstarteddescription link firetestrunfinishedresult separate class since called per run if you write custom runner you may need to notify junit of your progress running test do this by invoking the coderunnotifiercode passed to your implementation of link orgjunitrunnerrunnerrunrunnotifier future evolution of this class is likely to move link firetestrunstarteddescription and link firetestrunfinishedresult to a separate class since they should only be called once per run,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,12.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,7.0,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,14.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,5.2,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,2.5,1,called atomic test finished whether test succeeds fails param description description test ran called when an atomic test ha finished whether the test succeeds or fails param description the description of the test that just ran,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,10.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,4.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,5.0,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0.0,1,call assume codeactualcode satisfies condition specified codematchercode test halts ignored example pre assumethat passes foo execute assumethat assumption failure test halts int x never execute pre param static type accepted matcher flag obvious compiletime problems code assumethat isa param actual computed value compared param matcher expression built link matchers specifying allowed values see orghamcrestcorematchers see orgjunitmatchersjunitmatchers call to assume that codeactualcode satisfies the condition specified by codematchercode if not the test halt and is ignored example pre assumethat is pass foo will execute assumethat is assumption failure test halt int x will never execute pre param t the static type accepted by the matcher this can flag obvious compiletime problem such a code assumethat isa param actual the computed value being compared param matcher an expression built of link matcher specifying allowed value see orghamcrestcorematchers see orgjunitmatchersjunitmatchers,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,10.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,9.0,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,4.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,13.0,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,4.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,13.777,1,todo dup todo sep pm test fails sometimes todo sep pm update javadoc todo dup above todo sep pm test that this fails sometimes todo sep pm update javadoc,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,5.0,1,todoparallel need push parallel execution suites ie run suite parallel executioner get parallel execution todoparallel we need to push parallel execution down through suite ie run a suite with a parallel executioner and you get parallel execution,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,5.0,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,6.0,1,fails test message fails a test with no message,-1
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,5.0,1,also testing fail cant rely fail working also we are testing fail so we cant rely on fail working,-1
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,5.0,1,however need add ea vm argument running however you need to add the ea vm argument when running,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,15.0,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,5.0,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.6,2009-04-14,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,2.5,1,able remove suppression brave new hamcrest world should be able to remove this suppression in some brave new hamcrest world,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0.0,1,call assume codeactualcode satisfies condition specified codematchercode test halts ignored example pre assumethat passes foo execute assumethat assumption failure test halts int x never execute pre param static type accepted matcher flag obvious compiletime problems code assumethat isa param actual computed value compared param matcher expression built link matchers specifying allowed values see orghamcrestcorematchers see orgjunitmatchersjunitmatchers call to assume that codeactualcode satisfies the condition specified by codematchercode if not the test halt and is ignored example pre assumethat is pass foo will execute assumethat is assumption failure test halt int x will never execute pre param t the static type accepted by the matcher this can flag obvious compiletime problem such a code assumethat isa param actual the computed value being compared param matcher an expression built of link matcher specifying allowed value see orghamcrestcorematchers see orgjunitmatchersjunitmatchers,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,2.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,1.88,1,todo apr pm look missing javadoc todo apr pm look for missing javadoc,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,3.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,maximum length fexpected factual exceeded strings shortened see comparisoncompactor the maximum length for fexpected and factual if it is exceeded the string should be shortened see comparisoncompactor,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,2.5,1,create coderequestcode processed run tests class class suite method ignored param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class if the class ha a suite method it will be ignored param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner represents one or more problem encountered while initializing a runner,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,2.0,1,runs test corresponding code child assumed element list returned link parentrunnergetchildren subclasses responsible making sure relevant test events reported code notifier run the test corresponding to code child which can be assumed to be an element of the list returned by link parentrunnergetchildren subclass are responsible for making sure that relevant test event are reported through code notifier,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,9.0,1,returns link statement run nonoverridden code methods class superclasses running code next methods always executed exceptions thrown previous steps combined necessary exceptions methods link multiplefailureexception deprecated private soon use rules instead return a link statement run all nonoverridden code after method on this class and superclass before running code next all after method are always executed exception thrown by previous step are combined if necessary with exception from after method into a link multiplefailureexception deprecated will be private soon use rule instead,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,3.0,1,fails test message fails a test with no message,-1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,5.0,1,also testing fail cant rely fail working also we are testing fail so we cant rely on fail working,-1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,1.88,1,todo sep pm check structure todo sep pm check structure,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,3.0,1,fails test given message param message identifying message link assertionerror codenullcode okay see assertionerror fails a test with the given message param message the identifying message for the link assertionerror codenullcode okay see assertionerror,-1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,1.88,1,todo create testsystem instead todo create a testsystem instead,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,2.5,1,optionally specify codetimeoutcode milliseconds cause test method fail takes longer number milliseconds optionally specify codetimeoutcode in millisecond to cause a test method to fail if it take longer than that number of millisecond,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,3.5,1,adds throwable table execution continues test fail end add a throwable to the table execution continues but the test will fail at the end,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,8.5,1,test case obsolete since compiler catch error testnotestcaseclass test new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful this test case is obsolete since the compiler will catch this error in testnotestcaseclass test t new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,2.0,1,overhead could less half millisecond overhead could be le than half a millisecond,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,2.0,1,annotates fields contain rules field must public static subtype link methodrule information see link methodrule annotates field that contain rule such a field must be public not static and a subtype of link methodrule for more information see link methodrule,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,2.0,1,internal use results listener must first internal use only the result listener must be first,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,0.0,1,create codedescriptioncode named codenamecode generally add children codedescriptioncode param name name codedescriptioncode param annotations return codedescriptioncode named codenamecode create a codedescriptioncode named codenamecode generally you will add child to this codedescriptioncode param name the name of the codedescriptioncode param annotation return a codedescriptioncode named codenamecode,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,2.0,1,called test run generally test method annotated link orgjunitignore param description describes test run called when a test will not be run generally because a test method is annotated with link orgjunitignore param description describes the test that will not be run,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,2.5,1,invoked test method fails param e param method invoked when a test method fails param e param method,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,12.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,2.5,1,informs result test started informs the result that a test will be started,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,6.0,1,cheating runs whole class get warning method cant better junit thrown away method warning this is cheating because it run the whole class to get the warning for this method but we cant do better because junit s thrown away which method the warning is for,-1
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,2.5,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,2.5,1,temporaryfolder rule allows creation files folders guaranteed deleted test method finishes whether passes fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre the temporaryfolder rule allows creation of file and folder that are guaranteed to be deleted when the test method finish whether it pass or fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,3.0,1,convenient base class matchers require nonnull value specific type simply implements null check checks type casts author joe walnes convenient base class for matcher that require a nonnull value of a specific type this simply implement the null check check the type and then cast author joe walnes,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.7,2009-07-28,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,3.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner represents one or more problem encountered while initializing a runner,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,2.0,1,runs test corresponding code child assumed element list returned link parentrunnergetchildren subclasses responsible making sure relevant test events reported code notifier run the test corresponding to code child which can be assumed to be an element of the list returned by link parentrunnergetchildren subclass are responsible for making sure that relevant test event are reported through code notifier,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,3.0,1,fails test given message param message identifying message link assertionerror codenullcode okay see assertionerror fails a test with the given message param message the identifying message for the link assertionerror codenullcode okay see assertionerror,-1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,2.5,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object fibonacci private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,2.0,1,annotates fields contain rules field must public static subtype link methodrule information see link methodrule annotates field that contain rule such a field must be public not static and a subtype of link methodrule for more information see link methodrule,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,3.5,1,adds throwable table execution continues test fail end add a throwable to the table execution continues but the test will fail at the end,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,8.5,1,test case obsolete since compiler catch error testnotestcaseclass test new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful this test case is obsolete since the compiler will catch this error in testnotestcaseclass test t new testsuitenotestcaseclassclass trunfresult assertequals fresultruncount warning test asserttrue fresultwassuccessful,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,2.0,1,called test run generally test method annotated link orgjunitignore param description describes test run called when a test will not be run generally because a test method is annotated with link orgjunitignore param description describes the test that will not be run,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,9.0,1,returns link statement run nonoverridden code methods class superclasses running code next methods always executed exceptions thrown previous steps combined necessary exceptions methods link multiplefailureexception deprecated private soon use rules instead return a link statement run all nonoverridden code after method on this class and superclass before running code next all after method are always executed exception thrown by previous step are combined if necessary with exception from after method into a link multiplefailureexception deprecated will be private soon use rule instead,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,2.0,1,overhead could less half millisecond overhead could be le than half a millisecond,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,2.5,1,invoked test method fails param e param method invoked when a test method fails param e param method,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,6.0,1,cheating runs whole class get warning method cant better junit thrown away method warning this is cheating because it run the whole class to get the warning for this method but we cant do better because junit s thrown away which method the warning is for,-1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,0.0,1,create codedescriptioncode named codenamecode generally add children codedescriptioncode param name name codedescriptioncode param annotations return codedescriptioncode named codenamecode create a codedescriptioncode named codenamecode generally you will add child to this codedescriptioncode param name the name of the codedescriptioncode param annotation return a codedescriptioncode named codenamecode,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,2.0,1,internal use results listener must first internal use only the result listener must be first,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,2.5,1,temporaryfolder rule allows creation files folders guaranteed deleted test method finishes whether passes fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre the temporaryfolder rule allows creation of file and folder that are guaranteed to be deleted when the test method finish whether it pass or fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,1.88,1,todo create testsystem instead todo create a testsystem instead,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,12.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,2.5,1,informs result test started informs the result that a test will be started,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,maximum length fexpected factual exceeded strings shortened see comparisoncompactor the maximum length for fexpected and factual if it is exceeded the string should be shortened see comparisoncompactor,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,2.5,1,create coderequestcode processed run tests class class suite method ignored param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class if the class ha a suite method it will be ignored param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,3.0,1,convenient base class matchers require nonnull value specific type simply implements null check checks type casts author joe walnes convenient base class for matcher that require a nonnull value of a specific type this simply implement the null check check the type and then cast author joe walnes,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,3.0,1,fails test message fails a test with no message,-1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,5.0,1,also testing fail cant rely fail working also we are testing fail so we cant rely on fail working,-1
r4.8,2009-12-01,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,2.5,1,optionally specify codetimeoutcode milliseconds cause test method fail takes longer number milliseconds optionally specify codetimeoutcode in millisecond to cause a test method to fail if it take longer than that number of millisecond,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,2.5,1,able remove suppression brave new hamcrest world should be able to remove this suppression in some brave new hamcrest world,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,2.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0.0,1,call assume codeactualcode satisfies condition specified codematchercode test halts ignored example pre assumethat passes foo execute assumethat assumption failure test halts int x never execute pre param static type accepted matcher flag obvious compiletime problems code assumethat isa param actual computed value compared param matcher expression built link matchers specifying allowed values see orghamcrestcorematchers see orgjunitmatchersjunitmatchers call to assume that codeactualcode satisfies the condition specified by codematchercode if not the test halt and is ignored example pre assumethat is pass foo will execute assumethat is assumption failure test halt int x will never execute pre param t the static type accepted by the matcher this can flag obvious compiletime problem such a code assumethat isa param actual the computed value being compared param matcher an expression built of link matcher specifying allowed value see orghamcrestcorematchers see orgjunitmatchersjunitmatchers,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.8,2009-12-01,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,3.0,1,way filters implemented makes unnecessarily complicated buggy difficult specify new way handling filters could someday enable better new implementation the way filter are implemented make this unnecessarily complicated buggy and difficult to specify a new way of handling filter could someday enable a better new implementation,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,3.5,1,adds failure table code matcher match code value execution continues test fail end match fails add a failure to the table if code matcher doe not match code value execution continues but the test will fail at the end if the match fails,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,3.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,2.5,1,optionally specify codetimeoutcode milliseconds cause test method fail takes longer number milliseconds optionally specify codetimeoutcode in millisecond to cause a test method to fail if it take longer than that number of millisecond,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,2.5,1,create codedescriptioncode single test named codenamecode class codeclazzcode generally leaf codedescriptioncode remains binary compatibility clients junit param clazz class test param name name test method name test annotated link orgjunittest return codedescriptioncode named codenamecode create a codedescriptioncode of a single test named codenamecode in the class codeclazzcode generally this will be a leaf codedescriptioncode this remains for binary compatibility with client of junit param clazz the class of the test param name the name of the test a method name for test annotated with link orgjunittest return a codedescriptioncode named codenamecode,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,2.0,1,ask tests run stop starting next test phrased politely test currently running interrupted seems little odd put functionality coderunnotifiercode object guaranteed shared amongst many runners involved ask that the test run stop before starting the next test phrased politely because the test currently running will not be interrupted it seems a little odd to put this functionality here but the coderunnotifiercode is the only object guaranteed to be shared amongst the many runner involved,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,6.0,1,returns link statement code methods code test annotation code expecting attribute return normally code next throws exception correct type throw exception otherwise deprecated private soon use rules instead return a link statement if code method code test annotation ha the code expecting attribute return normally only if code next throw an exception of the correct type and throw an exception otherwise deprecated will be private soon use rule instead,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,2.5,1,called atomic test fails param failure describes test failed exception thrown called when an atomic test fails param failure describes the test that failed and the exception that wa thrown,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,18.25,1,annotates fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link methods link test method finally link methods throwing exception fail multiple annotated link rules class applied order depends jvms implementation reflection api undefined general example test class creates temporary folder test method deletes pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre information examples see link orgjunitrulestestrule note backwards compatibility annotation may also mark fields type link orgjunitrulesmethodrule honored however deprecated interface feature annotates field that contain rule such a field must be public not static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link before method then the link test method and finally any link after method throwing an exception if any of these fail if there are multiple annotated link rule on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test class that creates a temporary folder before each test method and deletes it after each pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre for more information and more example see link orgjunitrulestestrule note for backwards compatibility this annotation may also mark field of type link orgjunitrulesmethodrule which will be honored however this is a deprecated interface and feature,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,3.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,2.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,3.0,1,fails test message fails a test with no message,-1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,2.6,1,throw exception manually we have to throw the exception manually,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0.0,1,call assume codeactualcode satisfies condition specified codematchercode test halts ignored example pre assumethat passes foo execute assumethat assumption failure test halts int x never execute pre param static type accepted matcher flag obvious compiletime problems code assumethat isa param actual computed value compared param matcher expression built link matchers specifying allowed values see orghamcrestcorematchers see orgjunitmatchersjunitmatchers call to assume that codeactualcode satisfies the condition specified by codematchercode if not the test halt and is ignored example pre assumethat is pass foo will execute assumethat is assumption failure test halt int x will never execute pre param t the static type accepted by the matcher this can flag obvious compiletime problem such a code assumethat isa param actual the computed value being compared param matcher an expression built of link matcher specifying allowed value see orghamcrestcorematchers see orgjunitmatchersjunitmatchers,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,2.5,1,adds list requirements thrown exception instance code type add to the list of requirement for any thrown exception that it should be an instance of code type,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings inspired patch alex chaffee alexpurpletechcom thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string inspired by a patch from alex chaffee alexpurpletechcom,1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,12.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,1.88,1,todo create testsystem instead todo create a testsystem instead,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,10.75,1,testwatchman base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule deprecated use link testwatcher implements link testrule instead testwatchman is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule is deprecated use link testwatcher implement link testrule instead,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,2.5,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,3.0,1,returns link statement run nonoverridden code afterclass methods class superclasses executing code statement afterclass methods always executed exceptions thrown previous steps combined necessary exceptions afterclass methods link multiplefailureexception return a link statement run all nonoverridden code afterclass method on this class and superclass before executing code statement all afterclass method are always executed exception thrown by previous step are combined if necessary with exception from afterclass method into a link multiplefailureexception,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner represents one or more problem encountered while initializing a runner,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,2.5,1,informs result test started informs the result that a test will be started,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,19.5,1,testrule alteration test method set test methods run reported link testrule may add additional checks cause test would otherwise fail pass may perform necessary setup cleanup tests may observe test execution report elsewhere link testrules everything could done previously methods annotated link orgjunitbefore link orgjunitafter link orgjunitbeforeclass link orgjunitafterclass powerful easily shared projects classes default junit test runners suites individual test cases recognize link testrules introduced two different ways link orgjunitrule annotates methodlevel link testrules link orgjunitclassrule annotates classlevel link testrules see javadoc annotations information multiple link testrules applied test suite execution link statement executes method suite passed annotated link orgjunitrule turn may return substitute modified link statement passed next link orgjunitrule examples useful see provided testrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatcher add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a testrule is an alteration in how a test method or set of test method is run and reported a link testrule may add additional check that cause a test that would otherwise fail to pas or it may perform necessary setup or cleanup for test or it may observe test execution to report it elsewhere link testrules can do everything that could be done previously with method annotated with link orgjunitbefore link orgjunitafter link orgjunitbeforeclass or link orgjunitafterclass but they are more powerful and more easily shared between project and class the default junit test runner for suite and individual test case recognize link testrules introduced in two different way link orgjunitrule annotates methodlevel link testrules and link orgjunitclassrule annotates classlevel link testrules see javadoc for those annotation for more information multiple link testrules can be applied to a test or suite execution the link statement that executes the method or suite is passed to each annotated link orgjunitrule in turn and each may return a substitute or modified link statement which is passed to the next link orgjunitrule if any for example of how this can be useful see these provided testrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatcher add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,2.0,1,overhead could less half millisecond overhead could be le than half a millisecond,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,3.75,1,testwatcher base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatcher ampoverride protected void faileddescription watchedlog ampquotnampquot ampoverride protected void succeededdescription watchedlog ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre testwatcher is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatcher ampoverride protected void faileddescription d watchedlog d ampquotnampquot ampoverride protected void succeededdescription d watchedlog d ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,3.0,1,fails test given message param message identifying message link assertionerror codenullcode okay see assertionerror fails a test with the given message param message the identifying message for the link assertionerror codenullcode okay see assertionerror,-1
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,4.5,1,annotates static fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link beforeclass methods entire body test class contained methods standard junit test class contained classes link orgjunitrunnerssuite finally link afterclass methods statement passed link orgjunitrulestestrule never throw exception throwing exception link orgjunitrulestestrule result undefined behavior means link orgjunitrulestestrules link orgjunitruleserrorcollector link orgjunitrulesexpectedexception link orgjunitrulestimeout undefined behavior used link classrules multiple annotated link classrules class applied order depends jvms implementation reflection api undefined general example test suite connects server test classes run disconnects finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre information examples see link orgjunitrulestestrule annotates static field that contain rule such a field must be public static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link beforeclass method then the entire body of the test class all contained method if it is a standard junit test class or all contained class if it is a link orgjunitrunnerssuite and finally any link afterclass method the statement passed to the link orgjunitrulestestrule will never throw an exception and throwing an exception from the link orgjunitrulestestrule will result in undefined behavior this mean that some link orgjunitrulestestrules such a link orgjunitruleserrorcollector link orgjunitrulesexpectedexception and link orgjunitrulestimeout have undefined behavior when used a link classrules if there are multiple annotated link classrules on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test suite that connects to a server once before all the test class run and disconnect after they are finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre for more information and more example see link orgjunitrulestestrule,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,4.0,1,delete files folders temporary folder usually called directly since automatically applied link rule delete all file and folder under the temporary folder usually not called directly since it is automatically applied by the link rule,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,3.0,1,subclasses implement item already checked specific type never null subclass should implement this the item will already have been checked for the specific type and will never be null,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,2.0,1,returns request whose tests run certain order defined codecomparatorcode example code run test suite alphabetical order preprivate static comparatordescription forwardreturn new comparatordescriptionpublic int comparedescription description oreturn ogetdisplaynamecomparetoogetdisplaynamepublic static mainnew junitcorerunrequestaclassalltestsclasssortwithforward pre param comparator definition order tests request return request ordered tests return a request whose test can be run in a certain order defined by codecomparatorcode for example here is code to run a test suite in alphabetical order preprivate static comparatordescription forwardreturn new comparatordescriptionpublic int comparedescription o description oreturn ogetdisplaynamecomparetoogetdisplaynamepublic static mainnew junitcorerunrequestaclassalltestsclasssortwithforward pre param comparator definition of the order of the test in this request return a request with ordered test,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,2.5,1,run tests contained coderequestcode variant used code core attached listeners run notify param request request describing tests param core junitcore delegate return link result describing details test run failed tests run all the test contained in coderequestcode this variant should be used if code core ha attached listener that this run should notify param request the request describing test param core a junitcore to delegate to return a link result describing the detail of the test run and the failed test,0
r4.9,2011-08-22,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,3.5,1,adds failure table code matcher match code value execution continues test fail end match fails add a failure to the table if code matcher doe not match code value execution continues but the test will fail at the end if the match fails,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,2.5,1,called atomic test fails param failure describes test failed exception thrown called when an atomic test fails param failure describes the test that failed and the exception that wa thrown,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,3.0,1,way filters implemented makes unnecessarily complicated buggy difficult specify new way handling filters could someday enable better new implementation the way filter are implemented make this unnecessarily complicated buggy and difficult to specify a new way of handling filter could someday enable a better new implementation,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,3.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,2.5,1,create codedescriptioncode single test named codenamecode class codeclazzcode generally leaf codedescriptioncode param clazz class test param name name test method name test annotated link orgjunittest param annotations metadata test downstream interpreters return codedescriptioncode named codenamecode create a codedescriptioncode of a single test named codenamecode in the class codeclazzcode generally this will be a leaf codedescriptioncode param clazz the class of the test param name the name of the test a method name for test annotated with link orgjunittest param annotation metadata about the test for downstream interpreter return a codedescriptioncode named codenamecode,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,18.25,1,annotates fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link methods link test method finally link methods throwing exception fail multiple annotated link rules class applied order depends jvms implementation reflection api undefined general example test class creates temporary folder test method deletes pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre information examples see link orgjunitrulestestrule note backwards compatibility annotation may also mark fields type link orgjunitrulesmethodrule honored however deprecated interface feature annotates field that contain rule such a field must be public not static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link before method then the link test method and finally any link after method throwing an exception if any of these fail if there are multiple annotated link rule on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test class that creates a temporary folder before each test method and deletes it after each pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre for more information and more example see link orgjunitrulestestrule note for backwards compatibility this annotation may also mark field of type link orgjunitrulesmethodrule which will be honored however this is a deprecated interface and feature,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,4.5,1,write custom runners may need notify junit progress running tests invoking coderunnotifiercode passed implementation link orgjunitrunnerrunnerrunrunnotifier future evolution class likely move link firetestrunstarteddescription link firetestrunfinishedresult separate class since called per run if you write custom runner you may need to notify junit of your progress running test do this by invoking the coderunnotifiercode passed to your implementation of link orgjunitrunnerrunnerrunrunnotifier future evolution of this class is likely to move link firetestrunstarteddescription and link firetestrunfinishedresult to a separate class since they should only be called once per run,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,6.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,2.5,1,able remove suppression brave new hamcrest world should be able to remove this suppression in some brave new hamcrest world,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,0.0,1,call assume codeactualcode satisfies condition specified codematchercode test halts ignored example pre assumethat passes foo execute assumethat assumption failure test halts int x never execute pre param static type accepted matcher flag obvious compiletime problems code assumethat isa param actual computed value compared param matcher expression built link matchers specifying allowed values see orghamcrestcorematchers see orgjunitmatchersjunitmatchers call to assume that codeactualcode satisfies the condition specified by codematchercode if not the test halt and is ignored example pre assumethat is pass foo will execute assumethat is assumption failure test halt int x will never execute pre param t the static type accepted by the matcher this can flag obvious compiletime problem such a code assumethat isa param actual the computed value being compared param matcher an expression built of link matcher specifying allowed value see orghamcrestcorematchers see orgjunitmatchersjunitmatchers,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,3.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,2.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,2.0,1,overhead could less half millisecond overhead could be le than half a millisecond,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,3.0,1,fails test message fails a test with no message,-1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,5.0,1,also testing fail cant rely fail working also we are testing fail so we cant rely on fail working,-1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,2.5,1,informs result test started informs the result that a test will be started,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,12.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,1.88,1,todo create testsystem instead todo create a testsystem instead,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,10.75,1,testwatchman base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule deprecated use link testwatcher implements link testrule instead testwatchman is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule is deprecated use link testwatcher implement link testrule instead,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,5.5,1,returns true iff noarg method returns value assignable code type deprecated used theories runner use generic type info ought replaced forthcoming parametersignaturecanacceptresultofframeworkmethod theories moves junitcontrib return true iff this is a noarg method that return a value assignable to code type deprecated this is used only by the theory runner and doe not use all the generic type info that it ought to it will be replaced with a forthcoming parametersignaturecanacceptresultofframeworkmethod once theory move to junitcontrib,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,2.5,1,optionally specify codetimeoutcode milliseconds cause test method fail takes longer number milliseconds optionally specify codetimeoutcode in millisecond to cause a test method to fail if it take longer than that number of millisecond,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,2.5,1,invoked test fails param e param description invoked when a test fails param e param description,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,0.0,1,provides functionality specific runner implements parent node test tree children defined objects data type code link blockjunitclassrunner code link method link suite code link class subclasses must implement finding children node describing child running child parentrunner filter sort children handle code beforeclass code afterclass methods handle annotated link classrules create composite link description run children sequentially provides most of the functionality specific to a runner that implement a parent node in the test tree with child defined by object of some data type code t for link blockjunitclassrunner code t is link method for link suite code t is link class subclass must implement finding the child of the node describing each child and running each child parentrunner will filter and sort child handle code beforeclass and code afterclass method handle annotated link classrules create a composite link description and run child sequentially,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner represents one or more problem encountered while initializing a runner,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,3.0,1,fails test given message param message identifying message link assertionerror codenullcode okay see assertionerror fails a test with the given message param message the identifying message for the link assertionerror codenullcode okay see assertionerror,-1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings inspired patch alex chaffee alexpurpletechcom thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string inspired by a patch from alex chaffee alexpurpletechcom,1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,19.5,1,testrule alteration test method set test methods run reported link testrule may add additional checks cause test would otherwise fail pass may perform necessary setup cleanup tests may observe test execution report elsewhere link testrules everything could done previously methods annotated link orgjunitbefore link orgjunitafter link orgjunitbeforeclass link orgjunitafterclass powerful easily shared projects classes default junit test runners suites individual test cases recognize link testrules introduced two different ways link orgjunitrule annotates methodlevel link testrules link orgjunitclassrule annotates classlevel link testrules see javadoc annotations information multiple link testrules applied test suite execution link statement executes method suite passed annotated link orgjunitrule turn may return substitute modified link statement passed next link orgjunitrule examples useful see provided testrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatcher add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a testrule is an alteration in how a test method or set of test method is run and reported a link testrule may add additional check that cause a test that would otherwise fail to pas or it may perform necessary setup or cleanup for test or it may observe test execution to report it elsewhere link testrules can do everything that could be done previously with method annotated with link orgjunitbefore link orgjunitafter link orgjunitbeforeclass or link orgjunitafterclass but they are more powerful and more easily shared between project and class the default junit test runner for suite and individual test case recognize link testrules introduced in two different way link orgjunitrule annotates methodlevel link testrules and link orgjunitclassrule annotates classlevel link testrules see javadoc for those annotation for more information multiple link testrules can be applied to a test or suite execution the link statement that executes the method or suite is passed to each annotated link orgjunitrule in turn and each may return a substitute or modified link statement which is passed to the next link orgjunitrule if any for example of how this can be useful see these provided testrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatcher add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,2.5,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,however need add ea vm argument running however you need to add the ea vm argument when running,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,4.5,1,annotates static fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link beforeclass methods entire body test class contained methods standard junit test class contained classes link orgjunitrunnerssuite finally link afterclass methods statement passed link orgjunitrulestestrule never throw exception throwing exception link orgjunitrulestestrule result undefined behavior means link orgjunitrulestestrules link orgjunitruleserrorcollector link orgjunitrulesexpectedexception link orgjunitrulestimeout undefined behavior used link classrules multiple annotated link classrules class applied order depends jvms implementation reflection api undefined general example test suite connects server test classes run disconnects finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre information examples see link orgjunitrulestestrule annotates static field that contain rule such a field must be public static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link beforeclass method then the entire body of the test class all contained method if it is a standard junit test class or all contained class if it is a link orgjunitrunnerssuite and finally any link afterclass method the statement passed to the link orgjunitrulestestrule will never throw an exception and throwing an exception from the link orgjunitrulestestrule will result in undefined behavior this mean that some link orgjunitrulestestrules such a link orgjunitruleserrorcollector link orgjunitrulesexpectedexception and link orgjunitrulestimeout have undefined behavior when used a link classrules if there are multiple annotated link classrules on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test suite that connects to a server once before all the test class run and disconnect after they are finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre for more information and more example see link orgjunitrulestestrule,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,4.0,1,returns new fresh folder random name temporary folder return a new fresh folder with a random name under the temporary folder,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,7.5,1,returns statement executed either returns normally code method passes throws exception code method fails outline default implementation ul liinvoke code method result code createtest throw exceptions thrown either operation lihowever code methods code test annotation code expecting attribute return normally previous step threw exception correct type throw exception otherwise lihowever code methods code test annotation code timeout attribute throw exception previous step takes specified number milliseconds lialways run nonoverridden code methods class superclasses previous steps throws exception stop execution pass exception lialways run nonoverridden code methods class superclasses previous steps methods always executed exceptions thrown previous steps combined necessary exceptions methods link multiplefailureexception lialways allow code rule fields modify execution steps code rule may prevent execution steps add additional behavior modify thrown exceptions information see link testrule ul overridden subclasses either overriding method implementations creating substatement return a statement that when executed either return normally if code method pass or throw an exception if code method fails here is an outline of the default implementation ul liinvoke code method on the result of code createtest and throw any exception thrown by either operation lihowever if code method code test annotation ha the code expecting attribute return normally only if the previous step threw an exception of the correct type and throw an exception otherwise lihowever if code method code test annotation ha the code timeout attribute throw an exception if the previous step take more than the specified number of millisecond lialways run all nonoverridden code before method on this class and superclass before any of the previous step if any throw an exception stop execution and pas the exception on lialways run all nonoverridden code after method on this class and superclass after any of the previous step all after method are always executed exception thrown by previous step are combined if necessary with exception from after method into a link multiplefailureexception lialways allow code rule field to modify the execution of the above step a code rule may prevent all execution of the above step or add additional behavior before and after or modify thrown exception for more information see link testrule ul this can be overridden in subclass either by overriding this method or the implementation creating each substatement,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,3.0,1,create coderequestcode processed run tests class odd name necessary codeclasscode reserved word param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class the odd name is necessary because codeclasscode is a reserved word param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,-1
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,3.0,1,subclasses implement item already checked specific type never null subclass should implement this the item will already have been checked for the specific type and will never be null,0
r4.10,2011-09-29,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,2.5,1,run tests contained coderequestcode variant used code core attached listeners run notify param request request describing tests param core junitcore delegate return link result describing details test run failed tests run all the test contained in coderequestcode this variant should be used if code core ha attached listener that this run should notify param request the request describing test param core a junitcore to delegate to return a link result describing the detail of the test run and the failed test,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,9.0,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,4.0,1,given set test classes runs classes methods annotated either category given includecategory annotation subtype category note annotating suites code category effect categories must annotated direct method class example pre public interface fasttests public interface slowtests public static class amptest fail ampcategoryslowtestsclass amptest b ampcategory slowtestsclass fasttestsclass public static class b amptest c amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclasses aclass bclass note categories kind suite public static class slowtestsuite pre from a given set of test class run only the class and method that are annotated with either the category given with the includecategory annotation or a subtype of that category note that for now annotating suite with code category ha no effect category must be annotated on the direct method or class example pre public interface fasttests public interface slowtests public static class a amptest a fail ampcategoryslowtestsclass amptest b ampcategory slowtestsclass fasttestsclass public static class b amptest c amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclasses aclass bclass note that category is a kind of suite public static class slowtestsuite pre,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,6.0,1,avoid warning using result avoid warning for not using result,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,10.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,20.0,1,pif need respond events test run extend coderunlistenercode override appropriate methods listener throws exception processing test event removed remainder test runp pfor example suppose codecowbellcode class want make noise whenever test fails could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p pto invoke listener need run tests codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p see orgjunitrunnerjunitcore pif you need to respond to the event during a test run extend coderunlistenercode and override the appropriate method if a listener throw an exception while processing a test event it will be removed for the remainder of the test runp pfor example suppose you have a codecowbellcode class that you want to make a noise whenever a test fails you could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p pto invoke your listener you need to run your test through codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p see orgjunitrunnerjunitcore,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,5.2,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,6.0,1,create coderequestcode processed run tests class odd name necessary codeclasscode reserved word param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class the odd name is necessary because codeclasscode is a reserved word param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,-1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,4.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,6.0,1,convenient base class matchers require nonnull value specific type simply implements null check checks type casts author joe walnes convenient base class for matcher that require a nonnull value of a specific type this simply implement the null check check the type and then cast author joe walnes,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,39.0,1,testrule alteration test method set test methods run reported link testrule may add additional checks cause test would otherwise fail pass may perform necessary setup cleanup tests may observe test execution report elsewhere link testrules everything could done previously methods annotated link orgjunitbefore link orgjunitafter link orgjunitbeforeclass link orgjunitafterclass powerful easily shared projects classes default junit test runners suites individual test cases recognize link testrules introduced two different ways link orgjunitrule annotates methodlevel link testrules link orgjunitclassrule annotates classlevel link testrules see javadoc annotations information multiple link testrules applied test suite execution link statement executes method suite passed annotated link orgjunitrule turn may return substitute modified link statement passed next link orgjunitrule examples useful see provided testrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatcher add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a testrule is an alteration in how a test method or set of test method is run and reported a link testrule may add additional check that cause a test that would otherwise fail to pas or it may perform necessary setup or cleanup for test or it may observe test execution to report it elsewhere link testrules can do everything that could be done previously with method annotated with link orgjunitbefore link orgjunitafter link orgjunitbeforeclass or link orgjunitafterclass but they are more powerful and more easily shared between project and class the default junit test runner for suite and individual test case recognize link testrules introduced in two different way link orgjunitrule annotates methodlevel link testrules and link orgjunitclassrule annotates classlevel link testrules see javadoc for those annotation for more information multiple link testrules can be applied to a test or suite execution the link statement that executes the method or suite is passed to each annotated link orgjunitrule in turn and each may return a substitute or modified link statement which is passed to the next link orgjunitrule if any for example of how this can be useful see these provided testrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatcher add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,3.0,1,codetestresultcode collects results executing test case instance collecting parameter pattern test framework distinguishes ifailuresi ierrorsi failure anticipated checked assertions errors unanticipated problems like link arrayindexoutofboundsexception see test a codetestresultcode collect the result of executing a test case it is an instance of the collecting parameter pattern the test framework distinguishes between ifailuresi and ierrorsi a failure is anticipated and checked for with assertion error are unanticipated problem like an link arrayindexoutofboundsexception see test,-1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,5.0,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings inspired patch alex chaffee alexpurpletechcom thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string inspired by a patch from alex chaffee alexpurpletechcom,1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,3.0,1,represents one problems encountered initializing runner represents one or more problem encountered while initializing a runner,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,6.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,4.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,4.0,1,overhead could less half millisecond overhead could be le than half a millisecond,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,0.0,1,nothing passing may change do nothing same a passing for may change in,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,9.0,1,write custom runners may need notify junit progress running tests invoking coderunnotifiercode passed implementation link orgjunitrunnerrunnerrunrunnotifier future evolution class likely move link firetestrunstarteddescription link firetestrunfinishedresult separate class since called per run if you write custom runner you may need to notify junit of your progress running test do this by invoking the coderunnotifiercode passed to your implementation of link orgjunitrunnerrunnerrunrunnotifier future evolution of this class is likely to move link firetestrunstarteddescription and link firetestrunfinishedresult to a separate class since they should only be called once per run,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,4.0,1,pa codedescriptioncode describes test run run codedescriptionscode atomic single test compound containing children tests codedescriptionscode used provide feedback tests run example tree view visible many ides tests run example failures viewp pcodedescriptionscode implemented single class rather composite entirely informational contain logic aside counting testsp pin past used raw link junitframeworktestcases link junitframeworktestsuites display tree tests longer viable junit atomic tests longer superclass link object needed way pass class name together description emerged thisp see orgjunitrunnerrequest see orgjunitrunnerrunner pa codedescriptioncode describes a test which is to be run or ha been run codedescriptionscode can be atomic a single test or compound containing child test codedescriptionscode are used to provide feedback about the test that are about to run for example the tree view visible in many ides or test that have been run for example the failure viewp pcodedescriptionscode are implemented a a single class rather than a composite because they are entirely informational they contain no logic aside from counting their testsp pin the past we used the raw link junitframeworktestcases and link junitframeworktestsuites to display the tree of test this wa no longer viable in junit because atomic test no longer have a superclass below link object we needed a way to pas a class and name together description emerged from thisp see orgjunitrunnerrequest see orgjunitrunnerrunner,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,5.0,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,5.0,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,5.0,1,temporaryfolder rule allows creation files folders guaranteed deleted test method finishes whether passes fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre the temporaryfolder rule allows creation of file and folder that are guaranteed to be deleted when the test method finish whether it pass or fails pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,5.2,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,9.0,1,annotates static fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link beforeclass methods entire body test class contained methods standard junit test class contained classes link orgjunitrunnerssuite finally link afterclass methods statement passed link orgjunitrulestestrule never throw exception throwing exception link orgjunitrulestestrule result undefined behavior means link orgjunitrulestestrules link orgjunitruleserrorcollector link orgjunitrulesexpectedexception link orgjunitrulestimeout undefined behavior used link classrules multiple annotated link classrules class applied order depends jvms implementation reflection api undefined general example test suite connects server test classes run disconnects finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre information examples see link orgjunitrulestestrule annotates static field that contain rule such a field must be public static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link beforeclass method then the entire body of the test class all contained method if it is a standard junit test class or all contained class if it is a link orgjunitrunnerssuite and finally any link afterclass method the statement passed to the link orgjunitrulestestrule will never throw an exception and throwing an exception from the link orgjunitrulestestrule will result in undefined behavior this mean that some link orgjunitrulestestrules such a link orgjunitruleserrorcollector link orgjunitrulesexpectedexception and link orgjunitrulestimeout have undefined behavior when used a link classrules if there are multiple annotated link classrules on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test suite that connects to a server once before all the test class run and disconnect after they are finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre for more information and more example see link orgjunitrulestestrule,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,6.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,5.0,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,19.0,1,psometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current classp example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass psometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those the current classp for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,15.0,1,creates code testclass wrapping code klass time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code klass each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,3.0,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,5.0,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre real example see orgjunittestsmanipulationsortabletest if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant so for example pre runwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind pre for a real example see orgjunittestsmanipulationsortabletest,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,8.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,5.0,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments runp p wait command line argument given testrunner waits users types returnp ptestrunner prints trace tests executed followed summary endp a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre ptestrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are runp p when the wait command line argument is given testrunner wait until the user type returnp ptestrunner print a trace a the test are executed followed by a summary at the endp,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,4.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,5.0,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,7.0,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,5.0,1,tests follow cant use standard formatting exception tests try somethingthatshouldthrow fail catch assertionfailederror e fail would never reported in the test that follow we cant use standard formatting for exception test try somethingthatshouldthrow fail catch assertionfailederror e because fail would never be reported,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,7.0,1,create new maxcore serialized file stored storedresults deprecated use storedlocally create a new maxcore from a serialized file stored at storedresults deprecated use storedlocally,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,24.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,36.5,1,annotates fields contain rules field must public static subtype link orgjunitrulestestrule link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link methods link test method finally link methods throwing exception fail multiple annotated link rules class applied order depends jvms implementation reflection api undefined general example test class creates temporary folder test method deletes pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre information examples see link orgjunitrulestestrule note backwards compatibility annotation may also mark fields type link orgjunitrulesmethodrule honored however deprecated interface feature annotates field that contain rule such a field must be public not static and a subtype of link orgjunitrulestestrule the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link before method then the link test method and finally any link after method throwing an exception if any of these fail if there are multiple annotated link rule on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general for example here is a test class that creates a temporary folder before each test method and deletes it after each pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre for more information and more example see link orgjunitrulestestrule note for backwards compatibility this annotation may also mark field of type link orgjunitrulesmethodrule which will be honored however this is a deprecated interface and feature,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,3.759,1,todo create testsystem instead todo create a testsystem instead,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,9.0,1,psometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failedp example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignoredbr pre ampignorenot ready yet amptest something pre ampignore also applied test classbr pre ampignore public class ignoreme amptest test amptest test pre psometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failedp for example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignoredbr pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test classbr pre ampignore public class ignoreme amptest test amptest test pre,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,6.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,10.0,1,pif allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current classp simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest pif you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current classp here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,11.0,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,5.0,1,pwhen writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter pwhen writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,8.0,1,errorcollector rule allows execution test continue first problem found example collect _all_ incorrect rows table report pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot lines run combined failure logged end pre the errorcollector rule allows execution of a test to continue after the first problem is found for example to collect _all_ the incorrect row in a table and report them all at once pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot all line will run and then a combined failure logged at the end pre,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,11.0,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,14.0,1,implements junit standard test case class model defined annotations orgjunit package many users never notice class default test class runner exactly behavior old test class runner code junitclassrunner blockjunitclassrunner advantages writers custom junit runners slight changes default behavior however ul liit much simpler implementation based link statements allowing new operations inserted appropriate point execution flow liit published extension reuse encouraged whereas code junitclassrunner internal package deprecated ul implement the junit standard test case class model a defined by the annotation in the orgjunit package many user will never notice this class it is now the default test class runner but it should have exactly the same behavior a the old test class runner code junitclassrunner blockjunitclassrunner ha advantage for writer of custom junit runner that are slight change to the default behavior however ul liit ha a much simpler implementation based on link statement allowing new operation to be inserted into the appropriate point in the execution flow liit is published and extension and reuse are encouraged whereas code junitclassrunner wa in an internal package and is now deprecated ul,1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,6.0,1,set assert methods messages displayed assert fails a set of assert method message are only displayed when an assert fails,-1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,3.0,1,pa codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates suite methods starting test take argumentsp pa final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test pa codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p palternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p pthis constructor creates a suite with all the method starting with test that take no argumentsp pa final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre p see test,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,12.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,8.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,10.0,1,pif allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current classp simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest pif you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current classp here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,24.0,1,pthe codetestcode annotation tells junit codecode method attached run test case run method junit first constructs fresh instance class invokes annotated method exceptions thrown test reported junit failure exceptions thrown test assumed succeededp pa simple test looks like pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p pthe codetestcode annotation supports two optional parameters first codeexpectedcode declares test method throw exception doesnt throw exception throws different exception one declared test fails example following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget prep pthe second optional parameter codetimeoutcode causes test fail takes longer specified amount clock time measured milliseconds following test fails pre amptestbtimeoutb infinity whiletrue prep pthe codetestcode annotation tell junit that the codecode method to which it is attached can be run a a test case to run the method junit first construct a fresh instance of the class then invokes the annotated method any exception thrown by the test will be reported by junit a a failure if no exception are thrown the test is assumed to have succeededp pa simple test look like this pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p pthe codetestcode annotation support two optional parameter the first codeexpectedcode declares that a test method should throw an exception if it doesnt throw an exception or if it throw a different exception than the one declared the test fails for example the following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget prep pthe second optional parameter codetimeoutcode cause a test to fail if it take longer than a specified amount of clock time measured in millisecond the following test fails pre amptestbtimeoutb infinity whiletrue prep,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,6.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,6.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,13.0,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,4.0,1,param elementmatchers return matcher matching collection containing least one element matches matcher elementmatcher may one element matching matchers different elements matching matcher param elementmatchers return a matcher matching any collection containing at least one element that match each matcher in elementmatcher this may be one element matching all matcher or different element matching each matcher,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,4.0,1,set methods useful stating assumptions conditions test meaningful failed assumption mean code broken test provides useful information default junit runner treats tests failing assumptions ignored custom runners may behave differently example pre provides information database reachable test calculatetotalsalary dbconnection dbc databaseconnect assumenotnulldbc pre methods used directly codeassumeassumetruecode however read better referenced static importbr pre import static orgjunitassume assumetrue pre a set of method useful for stating assumption about the condition in which a test is meaningful a failed assumption doe not mean the code is broken but that the test provides no useful information the default junit runner treat test with failing assumption a ignored custom runner may behave differently for example pre only provides information if database is reachable test calculatetotalsalary dbconnection dbc databaseconnect assumenotnulldbc pre these method can be used directly codeassumeassumetruecode however they read better if they are referenced through static importbr pre import static orgjunitassume assumetrue pre,1
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,10.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests p default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test p the default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,11.0,1,returns true iff noarg method returns value assignable code type deprecated used theories runner use generic type info ought replaced forthcoming parametersignaturecanacceptresultofframeworkmethod theories moves junitcontrib return true iff this is a noarg method that return a value assignable to code type deprecated this is used only by the theory runner and doe not use all the generic type info that it ought to it will be replaced with a forthcoming parametersignaturecanacceptresultofframeworkmethod once theory move to junitcontrib,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,5.0,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,4.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,5.0,1,p custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p p the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static listampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,7.5,1,testwatcher base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatcher ampoverride protected void faileddescription watchedlog ampquotnampquot ampoverride protected void succeededdescription watchedlog ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre testwatcher is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatcher ampoverride protected void faileddescription d watchedlog d ampquotnampquot ampoverride protected void succeededdescription d watchedlog d ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,4.0,1,set assertion methods useful writing tests failed assertions recorded methods used directly codeassertassertequalscode however read better referenced static importbr pre import static orgjunitassert assertequals pre see assertionerror a set of assertion method useful for writing test only failed assertion are recorded these method can be used directly codeassertassertequalscode however they read better if they are referenced through static importbr pre import static orgjunitassert assertequals pre see assertionerror,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,0.0,1,provides functionality specific runner implements parent node test tree children defined objects data type code link blockjunitclassrunner code link method link suite code link class subclasses must implement finding children node describing child running child parentrunner filter sort children handle code beforeclass code afterclass methods handle annotated link classrules create composite link description run children sequentially provides most of the functionality specific to a runner that implement a parent node in the test tree with child defined by object of some data type code t for link blockjunitclassrunner code t is link method for link suite code t is link class subclass must implement finding the child of the node describing each child and running each child parentrunner will filter and sort child handle code beforeclass and code afterclass method handle annotated link classrules create a composite link description and run child sequentially,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,4.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,21.5,1,testwatchman base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule deprecated use link testwatcher implements link testrule instead testwatchman is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre deprecated link methodrule is deprecated use link testwatcher implement link testrule instead,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,5.0,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,6.0,1,error occurred an error occurred,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,7.0,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,12.0,1,deprecated included backwards compatibility junit removed next release please use link blockjunitclassrunner place link junitclassrunner may disappear soon april deprecated included for backwards compatibility with junit will be removed in the next release please use link blockjunitclassrunner in place of link junitclassrunner this may disappear a soon a april,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,5.0,1,able remove suppression brave new hamcrest world should be able to remove this suppression in some brave new hamcrest world,0
r4.11,2012-11-13,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,4.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,21.0,1,code expectedexception rule allows verify code throws specific exception husageh pre public class simpleexpectedexceptiontest amprule public expectedexception thrown expectedexceptionnone amptest throwsnothing exception expected none thrown passes amptest throwsexceptionwithspecifictype thrownexpectnullpointerexceptionclass throw new nullpointerexception pre p add code expectedexception rule test doesnt affect existing tests see code throwsnothing specifiying type expected exception test successful exception thrown fails different exception thrown p instead specifying exceptions type characterize expected exception based criterias ul lithe exceptions message contains specific text link expectmessagestringli lithe exceptions message complies hamcrest matcher link expectmessagematcherli lithe exceptions cause complies hamcrest matcher link expectcausematcherli lithe exception complies hamcrest matcher link expectmatcherli ul p combine presented expectmethods test successful specifications met pre amptest throwsexception thrownexpectnullpointerexceptionclass thrownexpectmessageampquothappenedampquot throw new nullpointerexceptionampquotwhat happenedampquot pre hassumptionviolatedexceptionsh p junit uses link assumptionviolatedexceptions indicating test provides useful information see link orgjunitassume information call code assume methods set expectations code expectedexception rule case rule handle consume exceptions handled framework eg following test ignored junits default runner pre amptest ignoredbecauseoffailedassumption assumetruefalse throws assumptionviolatedexception thrownexpectnullpointerexceptionclass pre hassertionerrorsh p junit uses link assertionerrors indicating test failing call code assert methods set expectations code expectedexception rule handled framework eg following test fails code asserttrue statement pre amptest throwsunhandled asserttruefalse throws assertionerror thrownexpectnullpointerexceptionclass pre hmissing exceptionsh p default missing exceptions reported error message like expected test throw instance foo configure different message means link reportmissingexceptionwithmessagestring use code placeholder description expected exception eg test doesnt throw fail error message test doesnt throw instance foo since the code expectedexception rule allows you to verify that your code throw a specific exception husageh pre public class simpleexpectedexceptiontest amprule public expectedexception thrown expectedexceptionnone amptest throwsnothing no exception expected none thrown pass amptest throwsexceptionwithspecifictype thrownexpectnullpointerexceptionclass throw new nullpointerexception pre p you have to add the code expectedexception rule to your test this doesnt affect your existing test see code throwsnothing after specifiying the type of the expected exception your test is successful when such an exception is thrown and it fails if a different or no exception is thrown p instead of specifying the exception type you can characterize the expected exception based on other criterias too ul lithe exception message contains a specific text link expectmessagestringli lithe exception message complies with a hamcrest matcher link expectmessagematcherli lithe exception cause complies with a hamcrest matcher link expectcausematcherli lithe exception itself complies with a hamcrest matcher link expectmatcherli ul p you can combine any of the presented expectmethods the test is successful if all specification are met pre amptest throwsexception thrownexpectnullpointerexceptionclass thrownexpectmessageampquothappenedampquot throw new nullpointerexceptionampquotwhat happenedampquot pre hassumptionviolatedexceptionsh p junit us link assumptionviolatedexceptions for indicating that a test provides no useful information see link orgjunitassume for more information you have to call code assume method before you set expectation of the code expectedexception rule in this case the rule will not handle consume the exception and it can be handled by the framework eg the following test is ignored by junits default runner pre amptest ignoredbecauseoffailedassumption assumetruefalse throw assumptionviolatedexception thrownexpectnullpointerexceptionclass pre hassertionerrorsh p junit us link assertionerrors for indicating that a test is failing you have to call code assert method before you set expectation of the code expectedexception rule if they should be handled by the framework eg the following test fails because of the code asserttrue statement pre amptest throwsunhandled asserttruefalse throw assertionerror thrownexpectnullpointerexceptionclass pre hmissing exceptionsh p by default missing exception are reported with an error message like expected test to throw an instance of foo you can configure a different message by mean of link reportmissingexceptionwithmessagestring you can use a code s placeholder for the description of the expected exception eg test doesnt throw s will fail with the error message test doesnt throw an instance of foo since,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,3.5,1,test files need cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id these test file need to be cleaned see httpssourceforgenetpmtaskphpfuncdetailtaskampproject_task_idampgroup_idampgroup_project_id,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p alternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p constructor creates suite methods starting test take arguments p final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre see test a codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p alternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p this constructor creates a suite with all the method starting with test that take no argument p a final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre see test,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test since a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,2.0,1,codedescriptioncode describes test run run codedescriptionscode atomic single test compound containing children tests codedescriptionscode used provide feedback tests run example tree view visible many ides tests run example failures view p codedescriptionscode implemented single class rather composite entirely informational contain logic aside counting tests p past used raw link junitframeworktestcases link junitframeworktestsuites display tree tests longer viable junit atomic tests longer superclass link object needed way pass class name together description emerged see orgjunitrunnerrequest see orgjunitrunnerrunner since a codedescriptioncode describes a test which is to be run or ha been run codedescriptionscode can be atomic a single test or compound containing child test codedescriptionscode are used to provide feedback about the test that are about to run for example the tree view visible in many ides or test that have been run for example the failure view p codedescriptionscode are implemented a a single class rather than a composite because they are entirely informational they contain no logic aside from counting their test p in the past we used the raw link junitframeworktestcases and link junitframeworktestsuites to display the tree of test this wa no longer viable in junit because atomic test no longer have a superclass below link object we needed a way to pas a class and name together description emerged from this see orgjunitrunnerrequest see orgjunitrunnerrunner since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,4.5,1,write custom runners may need notify junit progress running tests invoking coderunnotifiercode passed implementation link orgjunitrunnerrunnerrunrunnotifier future evolution class likely move link firetestrunstarteddescription link firetestrunfinishedresult separate class since called per run since if you write custom runner you may need to notify junit of your progress running test do this by invoking the coderunnotifiercode passed to your implementation of link orgjunitrunnerrunnerrunrunnotifier future evolution of this class is likely to move link firetestrunstarteddescription and link firetestrunfinishedresult to a separate class since they should only be called once per run since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,1.5,1,exception used theres problem parsing command line exception used if there a problem parsing the command line,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,7.5,1,register instance class link runnotifier notified events occur test run methods class abstract implementation override one methods receive events p example suppose codecowbellcode class want make noise whenever test fails could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p invoke listener need run tests codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p listener throws exception test event listeners link runlistenertestfailurefailure called code description link descriptiontest_mechanism indicate failure p default junit synchronize calls listener listener threadsafe want allow junit call listener multiple threads tests run parallel annotate test class link runlistenerthreadsafe p listener methods called thread running test unless otherwise indicated method javadoc see orgjunitrunnerjunitcore since register an instance of this class with link runnotifier to be notified of event that occur during a test run all of the method in this class are abstract and have no implementation override one or more method to receive event p for example suppose you have a codecowbellcode class that you want to make a noise whenever a test fails you could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p to invoke your listener you need to run your test through codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p if a listener throw an exception for a test event the other listener will have their link runlistenertestfailurefailure called with a code description of link descriptiontest_mechanism to indicate the failure p by default junit will synchronize call to your listener if your listener is threadsafe and you want to allow junit to call your listener from multiple thread when test are run in parallel you can annotate your test class with link runlistenerthreadsafe p listener method will be called from the same thread a is running the test unless otherwise indicated by the method javadoc see orgjunitrunnerjunitcore since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually since interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,4.0,1,errorcollector rule allows execution test continue first problem found example collect _all_ incorrect rows table report pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot lines run combined failure logged end pre since the errorcollector rule allows execution of a test to continue after the first problem is found for example to collect _all_ the incorrect row in a table and report them all at once pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot all line will run and then a combined failure logged at the end pre since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,3.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,21.0,1,codetestcode annotation tells junit codecode method attached run test case run method junit first constructs fresh instance class invokes annotated method exceptions thrown test reported junit failure exceptions thrown test assumed succeeded p simple test looks like pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p codetestcode annotation supports two optional parameters first codeexpectedcode declares test method throw exception doesnt throw exception throws different exception one declared test fails example following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget pre exceptions message one properties verified link orgjunitrulesexpectedexception expectedexception rule used information exception testing found hrefhttpsgithubcomjunitteamjunitwikiexceptiontestingjunit wikia p second optional parameter codetimeoutcode causes test fail takes longer specified amount clock time measured milliseconds following test fails pre amptestbtimeoutb infinity whiletrue pre bwarningb codetimeoutcode useful catch terminate infinite loops notem considered deterministic following test may may fail depending operating system schedules threads pre amptestbtimeoutb sleep threadsleep pre bthread safety warningb test methods timeout parameter run thread thread runs fixtures methods may yield different behavior code thread safe compared test method without timeout parameter bconsider using link orgjunitrulestimeout rule insteadb ensures test method run thread fixtures methods since the codetestcode annotation tell junit that the codecode method to which it is attached can be run a a test case to run the method junit first construct a fresh instance of the class then invokes the annotated method any exception thrown by the test will be reported by junit a a failure if no exception are thrown the test is assumed to have succeeded p a simple test look like this pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p the codetestcode annotation support two optional parameter the first codeexpectedcode declares that a test method should throw an exception if it doesnt throw an exception or if it throw a different exception than the one declared the test fails for example the following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget pre if the exception message or one of it property should be verified the link orgjunitrulesexpectedexception expectedexception rule can be used further information about exception testing can be found at the a hrefhttpsgithubcomjunitteamjunitwikiexceptiontestingjunit wikia p the second optional parameter codetimeoutcode cause a test to fail if it take longer than a specified amount of clock time measured in millisecond the following test fails pre amptestbtimeoutb infinity whiletrue pre bwarningb while codetimeoutcode is useful to catch and terminate infinite loop it should notem be considered deterministic the following test may or may not fail depending on how the operating system schedule thread pre amptestbtimeoutb sleep threadsleep pre bthread safety warningb test method with a timeout parameter are run in a thread other than the thread which run the fixture before and after method this may yield different behavior for code that is not thread safe when compared to the same test method without a timeout parameter bconsider using the link orgjunitrulestimeout rule insteadb which ensures a test method is run on the same thread a the fixture before and after method since,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current class unless overridden current class p simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest since if you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current class unless they are overridden in the current class p here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,4.5,1,timeout rule applies timeout test methods class pre public static class hasgloballongtimeout amprule public timeout globaltimeout new timeout amptest run throws interruptedexception threadsleep amptest infiniteloop true pre p test run new thread specified timeout elapses test completes execution interrupted via link threadinterrupt happens interruptable io locks methods link object link thread throwing link interruptedexception p specified timeout interpreted set however tests still launch separate threads useful disabling timeouts environments dynamically set based property since the timeout rule applies the same timeout to all test method in a class pre public static class hasgloballongtimeout amprule public timeout globaltimeout new timeout amptest run throw interruptedexception threadsleep amptest infiniteloop while true pre p each test is run in a new thread if the specified timeout elapses before the test completes it execution is interrupted via link threadinterrupt this happens in interruptable io and lock and method in link object and link thread throwing link interruptedexception p a specified timeout of will be interpreted a not set however test will still launch from separate thread this can be useful for disabling timeouts in environment where they are dynamically set based on some property since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,3.0,1,returns string containing stack trace error thrown testfailure return a string containing the stack trace of the error thrown by testfailure,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next major release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next major release please use link blockjunitclassrunner in place of link junitclassrunner,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,3.0,1,create coderequestcode processed run tests class odd name necessary codeclasscode reserved word param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class the odd name is necessary because codeclasscode is a reserved word param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,10.0,1,implements junit standard test case class model defined annotations orgjunit package many users never notice class default test class runner exactly behavior old test class runner code junitclassrunner p blockjunitclassrunner advantages writers custom junit runners slight changes default behavior however ul liit much simpler implementation based link statements allowing new operations inserted appropriate point execution flow liit published extension reuse encouraged whereas code junitclassrunner internal package deprecated ul p turn introduced link rules many cases extending blockjunitclassrunner necessary add new behavior link rules used makes extension reusable composable since implement the junit standard test case class model a defined by the annotation in the orgjunit package many user will never notice this class it is now the default test class runner but it should have exactly the same behavior a the old test class runner code junitclassrunner p blockjunitclassrunner ha advantage for writer of custom junit runner that are slight change to the default behavior however ul liit ha a much simpler implementation based on link statement allowing new operation to be inserted into the appropriate point in the execution flow liit is published and extension and reuse are encouraged whereas code junitclassrunner wa in an internal package and is now deprecated ul p in turn in we introduced link rule in many case where extending blockjunitclassrunner wa necessary to add new behavior link rule can be used which make the extension more reusable and composable since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests pthe default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith since a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test pthe default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,3.5,1,return matcher matching collection containing element deprecated please use link corematchershasitemobject instead return a matcher matching any collection containing element deprecated please use link corematchershasitemobject instead,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,sometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failed pfor example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignored pre ampignorenot ready yet amptest something pre ampignore also applied test class pre ampignore public class ignoreme amptest test amptest test pre since sometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failed pfor example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignored pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test class pre ampignore public class ignoreme amptest test amptest test pre since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0.0,1,property annotated classrule must implement link testrule pthis case added hrefhttpsgithubcomjunitteamjunitissuesissue if there is any property annotated with classrule then it must implement link testrule pthis case ha been added with a hrefhttpsgithubcomjunitteamjunitissuesissue a,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,2.5,1,nasty rule always fails nasty rule that always fails,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,10.0,1,annotating array iterabletyped field method ampdatapoints cause values array iterable given used potential parameters theories class run link orgjunitexperimentaltheoriestheories theories runner p datapoints considered potential values parameters types assignable multiple sets datapoints exist overlapping types control obtained naming datapoints using value annotation eg codeampdatapointsdataset datasetcode specifying named set consider potential values parameter using link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameters specified source ie without ampfromdatapoints link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotations use datapoints assignable parameter type potential values including named sets datapoints p datapoints methods whose array types arent assignable target parameter type cant possibly return relevant values called generating values parameter iterabletyped datapoints methods must always called though information available generic type erasure expensive methods returning iterable datapoints bad idea pre ampdatapoints public static string datapoints new string ampdatapoints public static string generateddatapoints return new string amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints annotating an array or iterabletyped field or method with ampdatapoints will cause the value in the array or iterable given to be used a potential parameter for theory in that class when run with the link orgjunitexperimentaltheoriestheories theory runner p datapoints will only be considered a potential value for parameter for which their type are assignable when multiple set of datapoints exist with overlapping type more control can be obtained by naming the datapoints using the value of this annotation eg with codeampdatapointsdataset datasetcode and then specifying which named set to consider a potential value for each parameter using the link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameter with no specified source ie without ampfromdatapoints or other link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotation will use all datapoints that are assignable to the parameter type a potential value including named set of datapoints p datapoints method whose array type arent assignable from the target parameter type and so cant possibly return relevant value will not be called when generating value for that parameter iterabletyped datapoints method must always be called though a this information is not available here after generic type erasure so expensive method returning iterable datapoints are a bad idea pre ampdatapoints public static string datapoints new string ampdatapoints public static string generateddatapoints return new string amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,2.5,1,removed next major release will be removed in the next major release,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away since represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,9.5,1,exception class used implement iassumptionsi state given test meaningful executed test assumption fails generate test case failure see orgjunitassume an exception class used to implement iassumptionsi state in which a given test is meaningful and should or should not be executed a test for which an assumption fails should not generate a test case failure see orgjunitassume,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,2.0,1,link blockjunitclassrunner parameters support parameters injected via constructor annotated fields a link blockjunitclassrunner with parameter support parameter can be injected via constructor or into annotated field,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,2.0,1,annotating link orgjunitexperimentaltheoriestheory theory method parameter ampparameterssuppliedby causes supplied values named link orgjunitexperimentaltheoriesparametersupplier parametersupplier run theory link orgjunitexperimentaltheoriestheories theories runner addition annotations annotated ampparameterssuppliedby used similarly parametersuppliedby annotations parameters detected searching heirarchy act syntactic sugar making pre ampparameterssuppliedbysupplierclass public ampinterface specialparameter amptheory theorymethodampspecialparameter string param pre equivalent pre amptheory theorymethodampparameterssuppliedbysupplierclass string param pre annotating a link orgjunitexperimentaltheoriestheory theory method parameter with ampparameterssuppliedby cause it to be supplied with value from the named link orgjunitexperimentaltheoriesparametersupplier parametersupplier when run a a theory by the link orgjunitexperimentaltheoriestheories theory runner in addition annotation themselves can be annotated with ampparameterssuppliedby and then used similarly parametersuppliedby annotation on parameter are detected by searching up this heirarchy such that these act a syntactic sugar making pre ampparameterssuppliedbysupplierclass public ampinterface specialparameter amptheory theorymethodampspecialparameter string param pre equivalent to pre amptheory theorymethodampparameterssuppliedbysupplierclass string param pre,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,19.5,1,testrule alteration test method set test methods run reported link testrule may add additional checks cause test would otherwise fail pass may perform necessary setup cleanup tests may observe test execution report elsewhere link testrules everything could done previously methods annotated link orgjunitbefore link orgjunitafter link orgjunitbeforeclass link orgjunitafterclass powerful easily shared projects classes default junit test runners suites individual test cases recognize link testrules introduced two different ways link orgjunitrule annotates methodlevel link testrules link orgjunitclassrule annotates classlevel link testrules see javadoc annotations information multiple link testrules applied test suite execution link statement executes method suite passed annotated link orgjunitrule turn may return substitute modified link statement passed next link orgjunitrule examples useful see provided testrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatcher add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul since a testrule is an alteration in how a test method or set of test method is run and reported a link testrule may add additional check that cause a test that would otherwise fail to pas or it may perform necessary setup or cleanup for test or it may observe test execution to report it elsewhere link testrules can do everything that could be done previously with method annotated with link orgjunitbefore link orgjunitafter link orgjunitbeforeclass or link orgjunitafterclass but they are more powerful and more easily shared between project and class the default junit test runner for suite and individual test case recognize link testrules introduced in two different way link orgjunitrule annotates methodlevel link testrules and link orgjunitclassrule annotates classlevel link testrules see javadoc for those annotation for more information multiple link testrules can be applied to a test or suite execution the link statement that executes the method or suite is passed to each annotated link orgjunitrule in turn and each may return a substitute or modified link statement which is passed to the next link orgjunitrule if any for example of how this can be useful see these provided testrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatcher add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,2.5,1,validates annotations classes methods validated annotation annotated link validatewith instances class shared multiple test runners immutable threadsafe since validates annotation on class and method to be validated an annotation should be annotated with link validatewith instance of this class are shared by multiple test runner so they should be immutable and threadsafe since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,2.5,1,exception thrown test fails timeout since exception thrown when a test fails on timeout since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,2.5,1,tests follow cant use standard formatting exception tests try somethingthatshouldthrow fail catch assertionfailederror e fail would never reported in the test that follow we cant use standard formatting for exception test try somethingthatshouldthrow fail catch assertionfailederror e because fail would never be reported,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,6.5,1,set assert methods messages displayed assert fails deprecated please use link orgjunitassert instead a set of assert method message are only displayed when an assert fails deprecated please use link orgjunitassert instead,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter since runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class unless overridden current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter since when writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class unless they are overridden in the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,4.0,1,code disableondebug rule allows label certain rules disabled debugging p illustrative use case tests make use link timeout rule ran debug mode test may terminate timeout abruptly debugging developers may disable timeout increase timeout making code change tests need debugging remember revert change afterwards rules link timeout may disabled debugging may wrapped code disableondebug p important benefit feature disable rules without making modifications test class remove debugging p nothing tackle timeouts time sensitive code test debugging may make less useful circumstances p example usage pre public static class disabletimeoutondebugsampletest amprule public testrule timeout new disableondebugnew timeout amptest mytest int assertequals suppose break point inspect pre since the code disableondebug rule allows you to label certain rule to be disabled when debugging p the most illustrative use case is for test that make use of the link timeout rule when ran in debug mode the test may terminate on timeout abruptly during debugging developer may disable the timeout or increase the timeout by making a code change on test that need debugging and remember revert the change afterwards or rule such a link timeout that may be disabled during debugging may be wrapped in a code disableondebug p the important benefit of this feature is that you can disable such rule without any making any modification to your test class to remove them during debugging p this doe nothing to tackle timeouts or time sensitive code under test when debugging and may make this le useful in such circumstance p example usage pre public static class disabletimeoutondebugsampletest amprule public testrule timeout new disableondebugnew timeout amptest mytest int i assertequals i suppose you had a break point here to inspect i pre since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,5.5,1,exception class used implement iassumptionsi state given test meaningful executed test assumption fails generate test case failure see orgjunitassume since an exception class used to implement iassumptionsi state in which a given test is meaningful and should or should not be executed a test for which an assumption fails should not generate a test case failure see orgjunitassume since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions since alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,3.0,1,requires validated member nonstatic requires the validated member to be nonstatic,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,6.25,1,code annotatedbuilder strategy constructing runners test class annotated code runwith annotation tests within class executed using runner specified within annotation p runner supports inner member classes member classes inherit runner enclosing class eg pre amprunwithmyrunnerclass public class mytest tests might go public class mymemberclass amptest thistestrunswith_myrunner test logic tests might go amprunwithanotherrunnerclass public class anothermemberclass tests might go public class deepinnerclass amptest thistestrunswith_anotherrunner test logic public class deepinheritedclass extends supertest amptest thistestrunswith_superrunner test logic amprunwithsuperrunnerclass public class supertest tests might go pre key points note ul liif runwith annotation runner createdli lithe resolve step insideout eg closest runwith annotation winsli lirunwith annotations inherited work class annotated itselfli lithe default junit runner support inner member classes valid custom runners support inner member classesli licustom runners support inner classes may may support runwith annotations member classes please refer custom runner documentationli ul see orgjunitrunnersmodelrunnerbuilder see orgjunitrunnerrunwith since the code annotatedbuilder is a strategy for constructing runner for test class that have been annotated with the code runwith annotation all test within this class will be executed using the runner that wa specified within the annotation p if a runner support inner member class the member class will inherit the runner from the enclosing class eg pre amprunwithmyrunnerclass public class mytest some test might go here public class mymemberclass amptest thistestrunswith_myrunner some test logic some more test might go here amprunwithanotherrunnerclass public class anothermemberclass some test might go here public class deepinnerclass amptest thistestrunswith_anotherrunner some test logic public class deepinheritedclass extends supertest amptest thistestrunswith_superrunner some test logic amprunwithsuperrunnerclass public class supertest some test might go here pre the key point to note here are ul liif there is no runwith annotation no runner will be createdli lithe resolve step is insideout eg the closest runwith annotation winsli lirunwith annotation are inherited and work a if the class wa annotated itselfli lithe default junit runner doe not support inner member class so this is only valid for custom runner that support inner member classesli licustom runner with support for inner class may or may not support runwith annotation for member class please refer to the custom runner documentationli ul see orgjunitrunnersmodelrunnerbuilder see orgjunitrunnerrunwith since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond since represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,6.5,1,convenient base class matchers require nonnull value specific type simply implements null check checks type casts author joe walnes deprecated please use link orghamcresttypesafematcher convenient base class for matcher that require a nonnull value of a specific type this simply implement the null check check the type and then cast author joe walnes deprecated please use link orghamcresttypesafematcher,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,2.0,1,rethrows given code throwable allowing caller declare throws code exception useful callers nothing reasonable code throwable thrown declared return code exception used code throw clause pre try dosomething catch throwable e throw throwablesrethrowasexceptione dosomethinglater pre param e exception rethrow return return anything since rethrows the given code throwable allowing the caller to declare that it throw code exception this is useful when your caller have nothing reasonable they can do when a code throwable is thrown this is declared to return code exception so it can be used in a code throw clause pre try dosomething catch throwable e throw throwablesrethrowasexceptione dosomethinglater pre param e exception to rethrow return doe not return anything since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,2.5,1,stopwatch rule notifies one protected methods time spent test poverride get time nanoseconds example class keep logging time spent passed failed skipped finished test pre public static class stopwatchtest private static final logger logger loggergetloggerampquotampquot private static void loginfodescription description string status long nanos string testname descriptiongetmethodname loggerinfostringformatampquottest spent microsecondsampquot testname status timeunitnanosecondstomicrosnanos amprule public stopwatch stopwatch new stopwatch ampoverride protected void succeededlong nanos description description loginfodescription ampquotsucceededampquot nanos ampoverride protected void failedlong nanos throwable e description description loginfodescription ampquotfailedampquot nanos ampoverride protected void skippedlong nanos assumptionviolatedexception e description description loginfodescription ampquotskippedampquot nanos ampoverride protected void finishedlong nanos description description loginfodescription ampquotfinishedampquot nanos amptest succeeds amptest fails fail amptest skips assumetruefalse pre example assert runtime pre amptest performancetest throws interruptedexception long delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta pre author tibor since the stopwatch rule notifies one of it own protected method of the time spent by a test poverride them to get the time in nanosecond for example this class will keep logging the time spent by each passed failed skipped and finished test pre public static class stopwatchtest private static final logger logger loggergetloggerampquotampquot private static void loginfodescription description string status long nanos string testname descriptiongetmethodname loggerinfostringformatampquottest s s spent d microsecondsampquot testname status timeunitnanosecondstomicrosnanos amprule public stopwatch stopwatch new stopwatch ampoverride protected void succeededlong nanos description description loginfodescription ampquotsucceededampquot nanos ampoverride protected void failedlong nanos throwable e description description loginfodescription ampquotfailedampquot nanos ampoverride protected void skippedlong nanos assumptionviolatedexception e description description loginfodescription ampquotskippedampquot nanos ampoverride protected void finishedlong nanos description description loginfodescription ampquotfinishedampquot nanos amptest succeeds amptest fails fail amptest skip assumetruefalse pre an example to assert runtime pre amptest performancetest throw interruptedexception long delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta pre author tibor since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,3.5,1,creates instance wrapping given statement given timeout milliseconds param statement statement wrap param timeoutmillis timeout milliseconds deprecated use link builder instead creates an instance wrapping the given statement with the given timeout in millisecond param statement the statement to wrap param timeoutmillis the timeout in millisecond deprecated use link builder instead,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,3.0,1,simple class fail parameters met simple class that should fail because no parameter are met,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,6.0,1,set methods useful stating assumptions conditions test meaningful failed assumption mean code broken test provides useful information assume basically means dont run test conditions dont apply default junit runner skips tests failing assumptions custom runners may behave differently p good example using assumptions hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa needed exclude certain datapoints arent suitable allowed certain test case p failed assumptions usually logged may many tests dont apply certain configurations p methods used directly codeassumeassumetruecode however read better referenced static importbr pre import static orgjunitassume assumetrue pre p see hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa since a set of method useful for stating assumption about the condition in which a test is meaningful a failed assumption doe not mean the code is broken but that the test provides no useful information assume basically mean dont run this test if these condition dont apply the default junit runner skip test with failing assumption custom runner may behave differently p a good example of using assumption is in a hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa where they are needed to exclude certain datapoints that arent suitable or allowed for a certain test case p failed assumption are usually not logged because there may be many test that dont apply to certain configuration p these method can be used directly codeassumeassumetruecode however they read better if they are referenced through static importbr pre import static orgjunitassume assumetrue pre p see a hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,2.5,1,allows link annotationvalidator attached annotation pwhen attached annotation validator instantiated invoked link orgjunitrunnersparentrunnerp since allows for an link annotationvalidator to be attached to an annotation pwhen attached to an annotation the validator will be instantiated and invoked by the link orgjunitrunnersparentrunnerp since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,2.5,1,marks test methods read theories link orgjunitexperimentaltheoriestheories theories runner see orgjunitexperimentaltheoriestheories mark test method that should be read a theory by the link orgjunitexperimentaltheoriestheories theory runner see orgjunitexperimentaltheoriestheories,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,3.0,1,model element may annotations since a model element that may have annotation since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,1.5,1,codetestresultcode collects results executing test case instance collecting parameter pattern test framework distinguishes ifailuresi ierrorsi failure anticipated checked assertions errors unanticipated problems like link arrayindexoutofboundsexception see test a codetestresultcode collect the result of executing a test case it is an instance of the collecting parameter pattern the test framework distinguishes between ifailuresi and ierrorsi a failure is anticipated and checked for with assertion error are unanticipated problem like an link arrayindexoutofboundsexception see test,-1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings p inspired patch alex chaffee alexpurpletechcom since thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string p inspired by a patch from alex chaffee alexpurpletechcom since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0.0,1,must show stack trace must show up in stack trace,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner since represents one or more problem encountered while initializing a runner since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,2.0,1,test mentioned code categories changes must reflected this test is mentioned in code category and any change must be reflected,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,3.75,1,testwatcher base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public testwatcher watchman new testwatcher ampoverride protected void failedthrowable e description description watchedlog description ampquotnampquot ampoverride protected void succeededdescription description watchedlog description ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since testwatcher is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public testwatcher watchman new testwatcher ampoverride protected void failedthrowable e description description watchedlog description ampquotnampquot ampoverride protected void succeededdescription description watchedlog description ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier since thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,7.25,1,testwatchman base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since deprecated use link testwatcher implements link testrule instead testwatchman is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since deprecated use link testwatcher which implement link testrule instead,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,9.0,1,annotating parameter link orgjunitexperimentaltheoriestheory amptheory method codeampfromdatapointscode limit datapoints considered potential values parameter link orgjunitexperimentaltheoriesdatapoints datapoints given name datapoint names given value parameter ampdatapoints annotation p datapoints without names considered values parameters annotated ampfromdatapoints pre ampdatapoints public static string unnamed new string ampdatapointsregexes public static string regexstrings new string ampdatapointsformatching alphanumeric public static string teststrings new string amptheory stringtheorystring param called every value regexstrings teststrings unnamed amptheory regextheoryampfromdatapointsregexes string regex ampfromdatapointsformatching string value called values regexstrings regex values teststrings value none values unnamed pre see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesdatapoints annotating a parameter of a link orgjunitexperimentaltheoriestheory amptheory method with codeampfromdatapointscode will limit the datapoints considered a potential value for that parameter to just the link orgjunitexperimentaltheoriesdatapoints datapoints with the given name datapoint name can be given a the value parameter of the ampdatapoints annotation p datapoints without name will not be considered a value for any parameter annotated with ampfromdatapoints pre ampdatapoints public static string unnamed new string ampdatapointsregexes public static string regexstrings new string ampdatapointsformatching alphanumeric public static string teststrings new string amptheory stringtheorystring param this will be called with every value in regexstrings teststrings and unnamed amptheory regextheoryampfromdatapointsregexes string regex ampfromdatapointsformatching string value this will be called with only the value in regexstrings a regex only the value in teststrings a value and none of the value in unnamed pre see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesdatapoints,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,2.5,1,multiple public methods annotated rule returning link methodrule rules returned run pthis case added hrefhttpsgithubcomjunitteamjunitissuesissue support rule methods works testrule methodrule if there are multiple public method annotated with rule returning a link methodrule then all the rule returned should be run pthis case ha been added with a hrefhttpsgithubcomjunitteamjunitissuesissue a support rule for method work only for testrule but not for methodrule,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,2.5,1,validates errors use code category annotation code throwable object added list errors since validates that there are no error in the use of the code category annotation if there is a code throwable object will be added to the list of error since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre p testrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments run p wait command line argument given testrunner waits users types return p testrunner prints trace tests executed followed summary end a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre p testrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are run p when the wait command line argument is given testrunner wait until the user type return p testrunner print a trace a the test are executed followed by a summary at the end,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants abstract inner classes ignored p example pre amprunwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind abstract public static class ignored pre if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant abstract inner class are ignored p so for example pre amprunwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind abstract public static class ignored pre,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,3.5,1,create new maxcore serialized file stored storedresults deprecated use storedlocally create a new maxcore from a serialized file stored at storedresults deprecated use storedlocally,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,sometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current class unless shadowed current class p example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass since sometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those of the current class unless they are shadowed in the current class p for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,7.5,1,temporaryfolder rule allows creation files folders deleted test method finishes whether passes fails whether deletion successful checked rule exception thrown case deletion fails pexample usage pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre since the temporaryfolder rule allows creation of file and folder that should be deleted when the test method finish whether it pass or fails whether the deletion is successful or not is not checked by this rule no exception will be thrown in case the deletion fails pexample of usage pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,5.0,1,annotating field method ampdatapoint cause field value value returned method used potential parameter theories class run link orgjunitexperimentaltheoriestheories theories runner p datapoint considered potential value parameters type assignable multiple code datapoints exist overlapping types control obtained naming datapoint using value annotation eg codeampdatapointdataset datasetcode specifying named set consider potential values parameter using link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameters specified source ie without ampfromdatapoints link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotations use code datapoints assignable parameter type potential values including named sets code datapoints pre ampdatapoint public static string datapoint value ampdatapointgenerated public static string generateddatapoint return generated value amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints annotating an field or method with ampdatapoint will cause the field value or the value returned by the method to be used a a potential parameter for theory in that class when run with the link orgjunitexperimentaltheoriestheories theory runner p a datapoint is only considered a a potential value for parameter for which it type is assignable when multiple code datapoints exist with overlapping type more control can be obtained by naming each datapoint using the value of this annotation eg with codeampdatapointdataset datasetcode and then specifying which named set to consider a potential value for each parameter using the link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameter with no specified source ie without ampfromdatapoints or other link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotation will use all code datapoints that are assignable to the parameter type a potential value including named set of code datapoints pre ampdatapoint public static string datapoint value ampdatapointgenerated public static string generateddatapoint return generated value amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,6.5,1,annotates static fields reference rules methods return field must public static subtype link orgjunitrulestestrule method must public static return subtype link orgjunitrulestestrule p link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link beforeclass methods entire body test class contained methods standard junit test class contained classes link orgjunitrunnerssuite finally link afterclass methods p statement passed link orgjunitrulestestrule never throw exception throwing exception link orgjunitrulestestrule result undefined behavior means link orgjunitrulestestrules link orgjunitruleserrorcollector link orgjunitrulesexpectedexception link orgjunitrulestimeout undefined behavior used link classrules p multiple annotated link classrules class applied order depends jvms implementation reflection api undefined general however rules defined fields always applied rules defined methods p example test suite connects server test classes run disconnects finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre p using method pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource getresource return new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre p information examples see link orgjunitrulestestrule since annotates static field that reference rule or method that return them a field must be public static and a subtype of link orgjunitrulestestrule a method must be public static and return a subtype of link orgjunitrulestestrule p the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link beforeclass method then the entire body of the test class all contained method if it is a standard junit test class or all contained class if it is a link orgjunitrunnerssuite and finally any link afterclass method p the statement passed to the link orgjunitrulestestrule will never throw an exception and throwing an exception from the link orgjunitrulestestrule will result in undefined behavior this mean that some link orgjunitrulestestrules such a link orgjunitruleserrorcollector link orgjunitrulesexpectedexception and link orgjunitrulestimeout have undefined behavior when used a link classrules p if there are multiple annotated link classrules on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general however rule defined by field will always be applied before rule defined by method p for example here is a test suite that connects to a server once before all the test class run and disconnect after they are finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre p and the same using a method pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource getresource return new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre p for more information and more example see link orgjunitrulestestrule since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,2.0,1,annotating link orgjunitexperimentaltheoriestheory theory method int parameter amptestedon causes supplied values ints array given run theory link orgjunitexperimentaltheoriestheories theories runner example method would called three times theories runner int parameters specified pre amptheory shouldpassforsomeintsamptestedonints int param pre annotating a link orgjunitexperimentaltheoriestheory theory method int parameter with amptestedon cause it to be supplied with value from the ints array given when run a a theory by the link orgjunitexperimentaltheoriestheories theory runner for example the below method would be called three time by the theory runner once with each of the int parameter specified pre amptheory shouldpassforsomeintsamptestedonints int param pre,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,5.0,1,class allows user choose order execution methods within test class pthe default order execution junit tests within class deterministic predictable order execution guaranteed java previous versions even change run run order execution changed deterministic junit pit recommended test methods written independent order executed however may number dependent tests either error design class allows user specify order execution test methods pfor possibilities see link methodsorters example pre ampfixmethodordermethodsortersname_ascending public class mytest pre see orgjunitrunnersmethodsorters since this class allows the user to choose the order of execution of the method within a test class pthe default order of execution of junit test within a class is deterministic but not predictable the order of execution is not guaranteed for java and some previous version and can even change from run to run so the order of execution wa changed to be deterministic in junit pit is recommended that test method be written so that they are independent of the order that they are executed however there may be a number of dependent test either through error or by design this class allows the user to specify the order of execution of test method pfor possibility see link methodsorters here is an example pre ampfixmethodordermethodsortersname_ascending public class mytest pre see orgjunitrunnersmethodsorters since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,0.0,1,provides functionality specific runner implements parent node test tree children defined objects data type code link blockjunitclassrunner code link method link suite code link class subclasses must implement finding children node describing child running child parentrunner filter sort children handle code beforeclass code afterclass methods handle annotated link classrules create composite link description run children sequentially since provides most of the functionality specific to a runner that implement a parent node in the test tree with child defined by object of some data type code t for link blockjunitclassrunner code t is link method for link suite code t is link class subclass must implement finding the child of the node describing each child and running each child parentrunner will filter and sort child handle code beforeclass and code afterclass method handle annotated link classrules create a composite link description and run child sequentially since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,2.0,1,set assertion methods useful writing tests failed assertions recorded methods used directly codeassertassertequalscode however read better referenced static import pre import static orgjunitassert assertequals pre see assertionerror since a set of assertion method useful for writing test only failed assertion are recorded these method can be used directly codeassertassertequalscode however they read better if they are referenced through static import pre import static orgjunitassert assertequals pre see assertionerror since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,19.7,1,custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparametersname ampquotindex fibampquot public static iterableampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed using twoargument constructor data values codeampparameterscode method p order easily identify individual tests may provide name codeampparameterscode annotation name allowed contain placeholders replaced runtime placeholders dl dtindexdt ddthe current parameter indexdd dtdt ddthe first parameter valuedd dtdt ddthe second parameter valuedd dtdt dddd dl p example given codeparameterizedcode runner creates names like code fibcode dont use name parameter current parameter index used name p also write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static iterableampltobjectampgt data return arraysaslistnew object ampparameter public int finput ampparameter public int fexpected amptest test assertequalsfexpected fibonaccicomputefinput pre p instance codefibonaccitestcode constructed default constructor fields annotated codeampparametercode initialized data values codeampparameterscode method p parameters provided array pre ampparameters public static object data return new object pre htests single parameterh p test needs single parameter dont wrap array instead provide codeiterablecode array objects pre ampparameters public static iterableamplt extends objectampgt data return arraysaslistampquotfirst testampquot ampquotsecond testampquot pre p pre ampparameters public static object data return new object ampquotfirst testampquot ampquotsecond testampquot pre hcreate different runnersh p default code parameterized runner creates slightly modified link blockjunitclassrunner set parameters build code parameterized runner creates another runner set parameters therefore build link parametersrunnerfactory creates runner link testwithparameters code testwithparameters bundling parameters test name factory must public zeroarg constructor pre public class yourrunnerfactory implements parameterizedrunnerfactory public runner createrunnerfortestwithparameterstestwithparameters test throws initializationerror return yourrunnertest pre p use link useparametersrunnerfactory tell code parameterized runner use factory pre amprunwithparameterizedclass ampuseparametersrunnerfactoryyourrunnerfactoryclass public class yourtest pre since the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test a fibonacci function write pre amprunwithparameterizedclass public class fibonaccitest ampparametersname ampquotindex fibampquot public static iterableampltobjectampgt data return arraysaslistnew object private int finput private int fexpected public fibonaccitestint input int expected finput input fexpected expected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed using the twoargument constructor and the data value in the codeampparameterscode method p in order that you can easily identify the individual test you may provide a name for the codeampparameterscode annotation this name is allowed to contain placeholder which are replaced at runtime the placeholder are dl dtindexdt ddthe current parameter indexdd dtdt ddthe first parameter valuedd dtdt ddthe second parameter valuedd dtdt dddd dl p in the example given above the codeparameterizedcode runner creates name like code fibcode if you dont use the name parameter then the current parameter index is used a name p you can also write pre amprunwithparameterizedclass public class fibonaccitest ampparameters public static iterableampltobjectampgt data return arraysaslistnew object ampparameter public int finput ampparameter public int fexpected amptest test assertequalsfexpected fibonaccicomputefinput pre p each instance of codefibonaccitestcode will be constructed with the default constructor and field annotated by codeampparametercode will be initialized with the data value in the codeampparameterscode method p the parameter can be provided a an array too pre ampparameters public static object data return new object pre htests with single parameterh p if your test need a single parameter only you dont have to wrap it with an array instead you can provide an codeiterablecode or an array of object pre ampparameters public static iterableamplt extends objectampgt data return arraysaslistampquotfirst testampquot ampquotsecond testampquot pre p or pre ampparameters public static object data return new object ampquotfirst testampquot ampquotsecond testampquot pre hcreate different runnersh p by default the code parameterized runner creates a slightly modified link blockjunitclassrunner for each set of parameter you can build an own code parameterized runner that creates another runner for each set of parameter therefore you have to build a link parametersrunnerfactory that creates a runner for each link testwithparameters code testwithparameters are bundling the parameter and the test name the factory must have a public zeroarg constructor pre public class yourrunnerfactory implement parameterizedrunnerfactory public runner createrunnerfortestwithparameterstestwithparameters test throw initializationerror return yourrunnertest pre p use the link useparametersrunnerfactory to tell the code parameterized runner that it should use your factory pre amprunwithparameterizedclass ampuseparametersrunnerfactoryyourrunnerfactoryclass public class yourtest pre since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,5.5,1,returns true noarg method returns value assignable code type deprecated used theories runner use generic type info ought replaced forthcoming parametersignaturecanacceptresultofframeworkmethod theories moves junitcontrib return true if this is a noarg method that return a value assignable to code type deprecated this is used only by the theory runner and doe not use all the generic type info that it ought to it will be replaced with a forthcoming parametersignaturecanacceptresultofframeworkmethod once theory move to junitcontrib,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,12.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule examples useful see provided methodrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatchman add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul note link methodrule replaced link testrule added benefit supporting class rules since a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for example of how this can be useful see these provided methodrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatchman add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul note that link methodrule ha been replaced by link testrule which ha the added benefit of supporting class rule since,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code clazz time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code clazz each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current class unless shadowed current class p simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest since if you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current class unless they are shadowed in the current class p here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,2.0,1,version code result returns hardcoded runtime makes values returned methods deterministic a version of code result that return a hardcoded runtime this make value returned by the method deterministic,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,3.0,1,use f prefix intellijs junitideatestrunner uses reflection access field see httpsgithubcomjunitteamjunitissues we have to use the f prefix because intellijs junitideatestrunner us reflection to access this field see httpsgithubcomjunitteamjunitissues,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite since a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses since represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,10.0,1,theories runner allows test certain functionality subset infinite set data points p theory piece functionality method executed several data inputs called data points make test method theory mark bamptheoryb create data point create public field test class mark bampdatapointb theories runner executes test method many times number data points declared providing different data point input argument invocation p p theory differs standard test method captures aspect intended behavior possibly infinite numbers scenarios corresponds number data points declared using assumptions assertions properly together covering multiple scenarios different data points make tests flexible bring closer scientific theories hence name p p example pre amprunwithbtheoriesclassb public class usertest bampdatapointb public static string good_username optimus bampdatapointb public static string username_with_slash optimusprime bamptheoryb filenameincludesusernamestring username assumethatusername notcontainsstring assertthatnew userusernameconfigfilename containsstringusername pre makes clear users filename included config file name doesnt contain slash another test theory might define happens username contain slash codeusertestcode attempt run codefilenameincludesusernamecode every compatible data point defined class assumptions fail data point silently ignored assumptions pass assertion fails test fails p defining general statements theories allows data point reuse across bunch functionality tests also allows automated tools search new unexpected data points expose bugs p p support theories absorbed popper project complete documentation found projects archived documentation p see hrefhttpwebarchiveorgwebpoppertigrisorgtutorialhtmlarchived popper project documentationa see hrefhttpwebarchiveorgwebhttpshareandenjoysaffnettddspecificationspdfpaper theoriesa the theory runner allows to test a certain functionality against a subset of an infinite set of data point p a theory is a piece of functionality a method that is executed against several data input called data point to make a test method a theory you mark it with bamptheoryb to create a data point you create a public field in your test class and mark it with bampdatapointb the theory runner then executes your test method a many time a the number of data point declared providing a different data point a the input argument on each invocation p p a theory differs from standard test method in that it capture some aspect of the intended behavior in possibly infinite number of scenario which corresponds to the number of data point declared using assumption and assertion properly together with covering multiple scenario with different data point can make your test more flexible and bring them closer to scientific theory hence the name p p for example pre amprunwithbtheoriesclassb public class usertest bampdatapointb public static string good_username optimus bampdatapointb public static string username_with_slash optimusprime bamptheoryb filenameincludesusernamestring username assumethatusername notcontainsstring assertthatnew userusernameconfigfilename containsstringusername pre this make it clear that the user filename should be included in the config file name only if it doesnt contain a slash another test or theory might define what happens when a username doe contain a slash codeusertestcode will attempt to run codefilenameincludesusernamecode on every compatible data point defined in the class if any of the assumption fail the data point is silently ignored if all of the assumption pas but an assertion fails the test fails p defining general statement a theory allows data point reuse across a bunch of functionality test and also allows automated tool to search for new unexpected data point that expose bug p p the support for theory ha been absorbed from the popper project and more complete documentation can be found from that project archived documentation p see a hrefhttpwebarchiveorgwebpoppertigrisorgtutorialhtmlarchived popper project documentationa see a hrefhttpwebarchiveorgwebhttpshareandenjoysaffnettddspecificationspdfpaper on theoriesa,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,15.5,1,annotates fields reference rules methods return rule field must public static subtype link orgjunitrulestestrule preferred link orgjunitrulesmethodrule method must public static must return subtype link orgjunitrulestestrule preferred link orgjunitrulesmethodrule p link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link methods link test method finally link methods throwing exception fail multiple annotated link rules class applied order fields first methods however multiple fields methods applied order depends jvms implementation reflection api undefined general rules defined fields always applied rules defined methods use link orgjunitrulesrulechain want control order rules applied p example test class creates temporary folder test method deletes pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p using method pre public static class hastempfolder private temporaryfolder folder new temporaryfolder amprule public temporaryfolder getfolder return folder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p information examples see link orgjunitrulestestrule since annotates field that reference rule or method that return a rule a field must be public not static and a subtype of link orgjunitrulestestrule preferred or link orgjunitrulesmethodrule a method must be public not static and must return a subtype of link orgjunitrulestestrule preferred or link orgjunitrulesmethodrule p the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link before method then the link test method and finally any link after method throwing an exception if any of these fail if there are multiple annotated link rule on a class they will be applied in order of field first then method however if there are multiple field or method they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general rule defined by field will always be applied before rule defined by method you can use a link orgjunitrulesrulechain if you want to have control over the order in which the rule are applied p for example here is a test class that creates a temporary folder before each test method and deletes it after each pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p and the same using a method pre public static class hastempfolder private temporaryfolder folder new temporaryfolder amprule public temporaryfolder getfolder return folder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p for more information and more example see link orgjunitrulestestrule since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,2.5,1,coderesultcode collects summarizes information running multiple tests tests counted additional information collected tests fail since a coderesultcode collect and summarizes information from running multiple test all test are counted additional information is collected from test that fail since,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,2.0,1,given set test classes runs classes methods annotated either category given includecategory annotation subtype category p note annotating suites code category effect categories must annotated direct method class p example pre public interface fasttests public interface slowtests public interface smoketests public static class amptest fail ampcategoryslowtestsclass amptest b ampcategoryfasttestsclass smoketestsclass amptest c ampcategoryslowtestsclass fasttestsclass public static class b amptest amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclassesaclass bclass note categories kind suite public static class slowtestsuite run ab bd aa ac pre p example run multiple categories pre amprunwithcategoriesclass ampincludecategoryfasttestsclass smoketestsclass ampsuiteclassesaclass bclass public static class fastorsmoketestsuite run ac bd ab fasttests smoketests pre version see hrefhttpsgithubcomjunitteamjunitwikicategoriescategories junit wikia from a given set of test class run only the class and method that are annotated with either the category given with the includecategory annotation or a subtype of that category p note that for now annotating suite with code category ha no effect category must be annotated on the direct method or class p example pre public interface fasttests public interface slowtests public interface smoketests public static class a amptest a fail ampcategoryslowtestsclass amptest b ampcategoryfasttestsclass smoketestsclass amptest c ampcategoryslowtestsclass fasttestsclass public static class b amptest d amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclassesaclass bclass note that category is a kind of suite public static class slowtestsuite will run ab and bd but not aa and ac pre p example to run multiple category pre amprunwithcategoriesclass ampincludecategoryfasttestsclass smoketestsclass ampsuiteclassesaclass bclass public static class fastorsmoketestsuite will run ac and bd but not ab because it is not any of fasttests or smoketests pre version see a hrefhttpsgithubcomjunitteamjunitwikicategoriescategories at junit wikia,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
r4.12,2014-12-04,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/CommandLineTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/rules/RuleMemberValidatorTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/InexactComparisonCriteria.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Suite.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxComputerTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/AllTests.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/Test.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,textui/TestRunner.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/Protectable.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,runner/BaseTestRunner.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,samples/money/MoneyBag.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,samples/SimpleTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,swingui/TestRunContext.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/Assert.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,tests/framework/SuiteTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/TestListener.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,tests/extensions/AllTests.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,tests/framework/AssertTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,runner/TestCaseClassLoader.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,extensions/ExceptionTestCase.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/TestResult.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/TestCase.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,extensions/ActiveTestSuite.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,swingui/TestRunner.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,framework/TestSuite.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,extensions/TestDecorator.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,swingui/TestTreeModel.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,runner/TestSuiteLoader.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,samples/money/Money.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java,2.0,1,annotating link orgjunitexperimentaltheoriestheory theory method parameter ampparameterssuppliedby causes supplied values named link orgjunitexperimentaltheoriesparametersupplier parametersupplier run theory link orgjunitexperimentaltheoriestheories theories runner addition annotations annotated ampparameterssuppliedby used similarly parametersuppliedby annotations parameters detected searching heirarchy act syntactic sugar making pre ampparameterssuppliedbysupplierclass public ampinterface specialparameter amptheory theorymethodampspecialparameter string param pre equivalent pre amptheory theorymethodampparameterssuppliedbysupplierclass string param pre annotating a link orgjunitexperimentaltheoriestheory theory method parameter with ampparameterssuppliedby cause it to be supplied with value from the named link orgjunitexperimentaltheoriesparametersupplier parametersupplier when run a a theory by the link orgjunitexperimentaltheoriestheories theory runner in addition annotation themselves can be annotated with ampparameterssuppliedby and then used similarly parametersuppliedby annotation on parameter are detected by searching up this heirarchy such that these act a syntactic sugar making pre ampparameterssuppliedbysupplierclass public ampinterface specialparameter amptheory theorymethodampspecialparameter string param pre equivalent to pre amptheory theorymethodampparameterssuppliedbysupplierclass string param pre,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerBuilder.java,4.5,1,runnerbuilder strategy constructing runners classes writers custom runners use coderunnerbuildercodes custom runner class constructor taking coderunnerbuildercode parameter passed instance coderunnerbuildercode used build runner example imagine custom runner builds suites based list classes text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre implementation textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite since a runnerbuilder is a strategy for constructing runner for class only writer of custom runner should use coderunnerbuildercodes a custom runner class with a constructor taking a coderunnerbuildercode parameter will be passed the instance of coderunnerbuildercode used to build that runner itself for example imagine a custom runner that build suite based on a list of class in a text file pre runwithtextfilesuiteclass suitespecfilemysuitetxt class mysuite pre the implementation of textfilesuite might include pre public textfilesuiteclass testclass runnerbuilder builder for string classname readclassnames addrunnerbuilderrunnerforclassclassfornameclassname pre see orgjunitrunnerssuite since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/samples/SimpleTest.java,3.0,1,avoid warning using result avoid warning for not using result,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/tests/extensions/AllTests.java,2.6,1,collect tests manually test class collection code collect test manually because we have to test class collection code,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ManagementFactory.java,2.5,1,nothing managementfactoryclass none failure do nothing managementfactoryclass will be none on failure,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoint.java,5.0,1,annotating field method ampdatapoint cause field value value returned method used potential parameter theories class run link orgjunitexperimentaltheoriestheories theories runner p datapoint considered potential value parameters type assignable multiple code datapoints exist overlapping types control obtained naming datapoint using value annotation eg codeampdatapointdataset datasetcode specifying named set consider potential values parameter using link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameters specified source ie without ampfromdatapoints link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotations use code datapoints assignable parameter type potential values including named sets code datapoints pre ampdatapoint public static string datapoint value ampdatapointgenerated public static string generateddatapoint return generated value amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints annotating an field or method with ampdatapoint will cause the field value or the value returned by the method to be used a a potential parameter for theory in that class when run with the link orgjunitexperimentaltheoriestheories theory runner p a datapoint is only considered a a potential value for parameter for which it type is assignable when multiple code datapoints exist with overlapping type more control can be obtained by naming each datapoint using the value of this annotation eg with codeampdatapointdataset datasetcode and then specifying which named set to consider a potential value for each parameter using the link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameter with no specified source ie without ampfromdatapoints or other link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotation will use all code datapoints that are assignable to the parameter type a potential value including named set of code datapoints pre ampdatapoint public static string datapoint value ampdatapointgenerated public static string generateddatapoint return generated value amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/ClassRule.java,6.5,1,annotates static fields reference rules methods return field must public static subtype link orgjunitrulestestrule method must public static return subtype link orgjunitrulestestrule p link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link beforeclass methods entire body test class contained methods standard junit test class contained classes link orgjunitrunnerssuite finally link afterclass methods p statement passed link orgjunitrulestestrule never throw exception throwing exception link orgjunitrulestestrule result undefined behavior means link orgjunitrulestestrules link orgjunitruleserrorcollector link orgjunitrulesexpectedexception link orgjunitrulestimeout undefined behavior used link classrules p multiple annotated link classrules class applied order depends jvms implementation reflection api undefined general however rules defined fields always applied rules defined methods ie statements returned former executed around returned latter p example test suite connects server test classes run disconnects finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre p using method pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource getresource return new externalresource ampoverride protected void throws throwable myserverconnect ampoverride protected void myserverdisconnect pre p information examples see link orgjunitrulestestrule since annotates static field that reference rule or method that return them a field must be public static and a subtype of link orgjunitrulestestrule a method must be public static and return a subtype of link orgjunitrulestestrule p the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link beforeclass method then the entire body of the test class all contained method if it is a standard junit test class or all contained class if it is a link orgjunitrunnerssuite and finally any link afterclass method p the statement passed to the link orgjunitrulestestrule will never throw an exception and throwing an exception from the link orgjunitrulestestrule will result in undefined behavior this mean that some link orgjunitrulestestrules such a link orgjunitruleserrorcollector link orgjunitrulesexpectedexception and link orgjunitrulestimeout have undefined behavior when used a link classrules p if there are multiple annotated link classrules on a class they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general however rule defined by field will always be applied after rule defined by method ie the statement returned by the former will be executed around those returned by the latter p for example here is a test suite that connects to a server once before all the test class run and disconnect after they are finished pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource resource new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre p and the same using a method pre amprunwithsuiteclass ampsuiteclassesaclass bclass cclass public class usesexternalresource public static server myserver new server ampclassrule public static externalresource getresource return new externalresource ampoverride protected void before throw throwable myserverconnect ampoverride protected void after myserverdisconnect pre p for more information and more example see link orgjunitrulestestrule since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java,2.0,1,annotating link orgjunitexperimentaltheoriestheory theory method int parameter amptestedon causes supplied values ints array given run theory link orgjunitexperimentaltheoriestheories theories runner example method would called three times theories runner int parameters specified pre amptheory shouldpassforsomeintsamptestedonints int param pre annotating a link orgjunitexperimentaltheoriestheory theory method int parameter with amptestedon cause it to be supplied with value from the ints array given when run a a theory by the link orgjunitexperimentaltheoriestheories theory runner for example the below method would be called three time by the theory runner once with each of the int parameter specified pre amptheory shouldpassforsomeintsamptestedonints int param pre,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/FixMethodOrder.java,5.0,1,class allows user choose order execution methods within test class pthe default order execution junit tests within class deterministic predictable order execution guaranteed java previous versions even change run run order execution changed deterministic junit pit recommended test methods written independent order executed however may number dependent tests either error design class allows user specify order execution test methods pfor possibilities see link methodsorters example pre ampfixmethodordermethodsortersname_ascending public class mytest pre see orgjunitrunnersmethodsorters since this class allows the user to choose the order of execution of the method within a test class pthe default order of execution of junit test within a class is deterministic but not predictable the order of execution is not guaranteed for java and some previous version and can even change from run to run so the order of execution wa changed to be deterministic in junit pit is recommended that test method be written so that they are independent of the order that they are executed however there may be a number of dependent test either through error or by design this class allows the user to specify the order of execution of test method pfor possibility see link methodsorters here is an example pre ampfixmethodordermethodsortersname_ascending public class mytest pre see orgjunitrunnersmethodsorters since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/assertion/AssertionTest.java,2.5,1,want use assertions reported correctly if you want to use assertion they will be reported correctly,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java,2.5,1,annotated datapoint therefore ignored not annotated a a datapoint and therefore should be ignored,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/ValidateWith.java,2.5,1,allows link annotationvalidator attached annotation pwhen attached annotation validator instantiated invoked link orgjunitrunnersparentrunnerp since allows for an link annotationvalidator to be attached to an annotation pwhen attached to an annotation the validator will be instantiated and invoked by the link orgjunitrunnersparentrunnerp since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestRule.java,19.5,1,testrule alteration test method set test methods run reported link testrule may add additional checks cause test would otherwise fail pass may perform necessary setup cleanup tests may observe test execution report elsewhere link testrules everything could done previously methods annotated link orgjunitbefore link orgjunitafter link orgjunitbeforeclass link orgjunitafterclass powerful easily shared projects classes default junit test runners suites individual test cases recognize link testrules introduced two different ways link orgjunitrule annotates methodlevel link testrules link orgjunitclassrule annotates classlevel link testrules see javadoc annotations information multiple link testrules applied test suite execution link statement executes method suite passed annotated link orgjunitrule turn may return substitute modified link statement passed next link orgjunitrule examples useful see provided testrules write ul lilink errorcollector collect multiple errors one test methodli lilink expectedexception make flexible assertions thrown exceptionsli lilink externalresource start stop server exampleli lilink temporaryfolder create fresh files delete testli lilink testname remember test name use methodli lilink testwatcher add logic events method executionli lilink timeout cause test fail set timeli lilink verifier fail test object state ends incorrectli ul since a testrule is an alteration in how a test method or set of test method is run and reported a link testrule may add additional check that cause a test that would otherwise fail to pas or it may perform necessary setup or cleanup for test or it may observe test execution to report it elsewhere link testrules can do everything that could be done previously with method annotated with link orgjunitbefore link orgjunitafter link orgjunitbeforeclass or link orgjunitafterclass but they are more powerful and more easily shared between project and class the default junit test runner for suite and individual test case recognize link testrules introduced in two different way link orgjunitrule annotates methodlevel link testrules and link orgjunitclassrule annotates classlevel link testrules see javadoc for those annotation for more information multiple link testrules can be applied to a test or suite execution the link statement that executes the method or suite is passed to each annotated link orgjunitrule in turn and each may return a substitute or modified link statement which is passed to the next link orgjunitrule if any for example of how this can be useful see these provided testrules or write your own ul lilink errorcollector collect multiple error in one test methodli lilink expectedexception make flexible assertion about thrown exceptionsli lilink externalresource start and stop a server for exampleli lilink temporaryfolder create fresh file and delete after testli lilink testname remember the test name for use during the methodli lilink testwatcher add logic at event during method executionli lilink timeout cause test to fail after a set timeli lilink verifier fail test if object state end up incorrectli ul since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestResult.java,1.5,1,codetestresultcode collects results executing test case instance collecting parameter pattern test framework distinguishes ifailuresi ierrorsi failure anticipated checked assertions errors unanticipated problems like link arrayindexoutofboundsexception see test a codetestresultcode collect the result of executing a test case it is an instance of the collecting parameter pattern the test framework distinguishes between ifailuresi and ierrorsi a failure is anticipated and checked for with assertion error are unanticipated problem like an link arrayindexoutofboundsexception see test,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/ComparisonFailure.java,2.5,1,thrown link orgjunitassertassertequalsobject object assertequalsstring string fails create throw codecomparisonfailurecode manually want show users difference two complex strings p inspired patch alex chaffee alexpurpletechcom since thrown when an link orgjunitassertassertequalsobject object assertequalsstring string fails create and throw a codecomparisonfailurecode manually if you want to show user the difference between two complex string p inspired by a patch from alex chaffee alexpurpletechcom since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/InitializationError.java,1.5,1,represents one problems encountered initializing runner since represents one or more problem encountered while initializing a runner since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/samples/SimpleTest.java,2.5,1,simple tests pthis test expected fail some simple test pthis test is expected to fail,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatcher.java,3.75,1,testwatcher base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public testwatcher watchman new testwatcher ampoverride protected void failedthrowable e description description watchedlog description ampquotnampquot ampoverride protected void succeededdescription description watchedlog description ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since testwatcher is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public testwatcher watchman new testwatcher ampoverride protected void failedthrowable e description description watchedlog description ampquotnampquot ampoverride protected void succeededdescription description watchedlog description ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Test.java,2.0,1,testem run collect results see testresult a testem can be run and collect it result see testresult,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/StoppedByUserException.java,2.5,1,thrown user requested test run stop writers test running guis prepared catch codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier since thrown when a user ha requested that the test run stop writer of test running gui should be prepared to catch a codestoppedbyuserexceptioncode see orgjunitrunnernotificationrunnotifier since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java,3.5,1,matcher delegates throwablematcher addition appends stacktrace actual throwable case mismatch deprecated use code orghamcrestjunitjunitmatchersisthrowable code orghamcrestjunitjunitmatchersisexception a matcher that delegate to throwablematcher and in addition appends the stacktrace of the actual throwable in case of a mismatch deprecated use code orghamcrestjunitjunitmatchersisthrowable or code orghamcrestjunitjunitmatchersisexception,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Stopwatch.java,2.5,1,stopwatch rule notifies one protected methods time spent test poverride get time nanoseconds example class keep logging time spent passed failed skipped finished test pre public static class stopwatchtest private static final logger logger loggergetloggerampquotampquot private static void loginfodescription description string status long nanos string testname descriptiongetmethodname loggerinfostringformatampquottest spent microsecondsampquot testname status timeunitnanosecondstomicrosnanos amprule public stopwatch stopwatch new stopwatch ampoverride protected void succeededlong nanos description description loginfodescription ampquotsucceededampquot nanos ampoverride protected void failedlong nanos throwable e description description loginfodescription ampquotfailedampquot nanos ampoverride protected void skippedlong nanos assumptionviolatedexception e description description loginfodescription ampquotskippedampquot nanos ampoverride protected void finishedlong nanos description description loginfodescription ampquotfinishedampquot nanos amptest succeeds amptest fails fail amptest skips assumetruefalse pre example assert runtime pre amptest performancetest throws interruptedexception long delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta pre author tibor since the stopwatch rule notifies one of it own protected method of the time spent by a test poverride them to get the time in nanosecond for example this class will keep logging the time spent by each passed failed skipped and finished test pre public static class stopwatchtest private static final logger logger loggergetloggerampquotampquot private static void loginfodescription description string status long nanos string testname descriptiongetmethodname loggerinfostringformatampquottest s s spent d microsecondsampquot testname status timeunitnanosecondstomicrosnanos amprule public stopwatch stopwatch new stopwatch ampoverride protected void succeededlong nanos description description loginfodescription ampquotsucceededampquot nanos ampoverride protected void failedlong nanos throwable e description description loginfodescription ampquotfailedampquot nanos ampoverride protected void skippedlong nanos assumptionviolatedexception e description description loginfodescription ampquotskippedampquot nanos ampoverride protected void finishedlong nanos description description loginfodescription ampquotfinishedampquot nanos amptest succeeds amptest fails fail amptest skip assumetruefalse pre an example to assert runtime pre amptest performancetest throw interruptedexception long delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta threadsleepl assertequalsd stopwatchruntimemilliseconds delta pre author tibor since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TestWatchman.java,7.25,1,testwatchman base class rules take note testing action without modifying example class keep log passing failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since deprecated use link testwatcher implements link testrule instead testwatchman is a base class for rule that take note of the testing action without modifying it for example this class will keep a log of each passing and failing test pre public static class watchmantest private static string watchedlog amprule public methodrule watchman new testwatchman ampoverride failedthrowable e frameworkmethod method watchedlog methodgetname ampquot ampquot egetclassgetsimplename ampquotnampquot ampoverride succeededframeworkmethod method watchedlog methodgetname ampquot ampquot ampquotsuccessnampquot amptest fails fail amptest succeeds pre since deprecated use link testwatcher which implement link testrule instead,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/Throwables.java,2.0,1,rethrows given code throwable allowing caller declare throws code exception useful callers nothing reasonable code throwable thrown declared return code exception used code throw clause pre try dosomething catch throwable e throw throwablesrethrowasexceptione dosomethinglater pre param e exception rethrow return return anything since rethrows the given code throwable allowing the caller to declare that it throw code exception this is useful when your caller have nothing reasonable they can do when a code throwable is thrown this is declared to return code exception so it can be used in a code throw clause pre try dosomething catch throwable e throw throwablesrethrowasexceptione dosomethinglater pre param e exception to rethrow return doe not return anything since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Computer.java,3.0,1,represents strategy computing runners suites warning class likely undergo serious changes version beyond since represents a strategy for computing runner and suite warning this class is very likely to undergo serious change in version and beyond since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java,3.5,1,matcher applies delegate matcher cause current throwable returning result match param type throwable matched deprecated use code orghamcrestjunitexpectedexception a matcher that applies a delegate matcher to the cause of the current throwable returning the result of that match param t the type of the throwable being matched deprecated use code orghamcrestjunitexpectedexception,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/PrintableResult.java,3.0,1,test result prints nicely error messages intended used junit selftests example pre assertthattestresulthasexpectedexceptionclass issuccessful pre a test result that print nicely in error message this is only intended to be used in junit selftests for example pre assertthattestresulthasexpectedexceptionclass issuccessful pre,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/validator/AnnotationValidator.java,2.5,1,validates annotations classes methods validated annotation annotated link validatewith instances class shared multiple test runners immutable threadsafe since validates annotation on class and method to be validated an annotation should be annotated with link validatewith instance of this class are shared by multiple test runner so they should be immutable and threadsafe since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/MoneyBag.java,2.0,1,moneybag defers exchange rate conversions example adding swiss francs us dollars represented bag containing two monies chf usd adding another swiss francs gives bag chf usd due deferred exchange rate conversion later value moneybag different exchange rates moneybag represented list monies provides different constructors create moneybag a moneybag defers exchange rate conversion for example adding swiss franc to u dollar is represented a a bag containing the two monies chf and usd adding another swiss franc give a bag with chf and usd due to the deferred exchange rate conversion we can later value a moneybag with different exchange rate a moneybag is represented a a list of monies and provides different constructor to create a moneybag,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filter.java,2.5,1,invoke link orgjunitrunnerrunner cause tests intends run first checked filter pass filter run param child runner filtered receiver throws notestsremainexception receiver removes tests invoke with a link orgjunitrunnerrunner to cause all test it intends to run to first be checked with the filter only those that pas the filter will be run param child the runner to be filtered by the receiver throw notestsremainexception if the receiver remove all test,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestTimedOutException.java,2.5,1,exception thrown test fails timeout since exception thrown when a test fails on timeout since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/AssertTest.java,2.5,1,tests follow cant use standard formatting exception tests try somethingthatshouldthrow fail catch assertionfailederror e fail would never reported in the test that follow we cant use standard formatting for exception test try somethingthatshouldthrow fail catch assertionfailederror e because fail would never be reported,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Assert.java,6.5,1,set assert methods messages displayed assert fails deprecated please use link orgjunitassert instead a set of assert method message are only displayed when an assert fails deprecated please use link orgjunitassert instead,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Filterable.java,0.0,1,runners allow filtering implement interface implement link filterfilter remove tests dont pass filter since runner that allow filtering should implement this interface implement link filterfilter to remove test that dont pas the filter since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Before.java,2.5,1,writing tests common find several tests need similar objects created run annotating codecode method codeampbeforecode causes method run link orgjunittest method codeampbeforecode methods superclasses run current class unless overridden current class ordering defined p simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter since when writing test it is common to find that several test need similar object created before they can run annotating a codecode method with codeampbeforecode cause that method to be run before the link orgjunittest method the codeampbeforecode method of superclass will be run before those of the current class unless they are overridden in the current class no other ordering is defined p here is a simple example pre public class example list empty ampbefore initialize empty new arraylist amptest size amptest remove pre see orgjunitbeforeclass see orgjunitafter since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/AfterClass.java,5.0,1,allocate expensive external resources link orgjunitbeforeclass method need release tests class run annotating codepublic static voidcode method codeampafterclasscode causes method run tests class run codeampafterclasscode methods guaranteed run even link orgjunitbeforeclass method throws exception codeampafterclasscode methods declared superclasses run current class unless shadowed current class p simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest since if you allocate expensive external resource in a link orgjunitbeforeclass method you need to release them after all the test in the class have run annotating a codepublic static voidcode method with codeampafterclasscode cause that method to be run after all the test in the class have been run all codeampafterclasscode method are guaranteed to run even if a link orgjunitbeforeclass method throw an exception the codeampafterclasscode method declared in superclass will be run after those of the current class unless they are shadowed in the current class p here is a simple example pre public class example private static databaseconnection database ampbeforeclass public static void login database amptest something amptest somethingelse ampafterclass public static void logout databaselogout pre see orgjunitbeforeclass see orgjunittest since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/AssumptionViolatedException.java,5.5,1,exception class used implement iassumptionsi state given test meaningful executed test assumption fails generate test case failure see orgjunitassume since an exception class used to implement iassumptionsi state in which a given test is meaningful and should or should not be executed a test for which an assumption fails should not generate a test case failure see orgjunitassume since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/Annotatable.java,3.0,1,model element may annotations since a model element that may have annotation since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/JUnit4.java,6.5,1,aliases current default junit class runner futureproofing future versions junit change default runner class also change definition class developers wanting explicitly tag class junit class use code runwithjunitclass example junit code runwithblockjunitclassrunnerclass way class usedany extension depends implementation details class likely break future versions since alias the current default junit class runner for futureproofing if future version of junit change the default runner class they will also change the definition of this class developer wanting to explicitly tag a class a a junit class should use code runwithjunitclass not for example in junit code runwithblockjunitclassrunnerclass this is the only way this class should be usedany extension that depends on the implementation detail of this class is likely to break in future version since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theory.java,2.5,1,marks test methods read theories link orgjunitexperimentaltheoriestheories theories runner see orgjunitexperimentaltheoriestheories mark test method that should be read a theory by the link orgjunitexperimentaltheoriestheories theory runner see orgjunitexperimentaltheoriestheories,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assume.java,6.0,1,set methods useful stating assumptions conditions test meaningful failed assumption mean code broken test provides useful information assume basically means dont run test conditions dont apply default junit runner skips tests failing assumptions custom runners may behave differently p good example using assumptions hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa needed exclude certain datapoints arent suitable allowed certain test case p failed assumptions usually logged may many tests dont apply certain configurations p methods used directly codeassumeassumetruecode however read better referenced static importbr pre import static orgjunitassume assumetrue pre p see hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa since a set of method useful for stating assumption about the condition in which a test is meaningful a failed assumption doe not mean the code is broken but that the test provides no useful information assume basically mean dont run this test if these condition dont apply the default junit runner skip test with failing assumption custom runner may behave differently p a good example of using assumption is in a hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa where they are needed to exclude certain datapoints that arent suitable or allowed for a certain test case p failed assumption are usually not logged because there may be many test that dont apply to certain configuration p these method can be used directly codeassumeassumetruecode however they read better if they are referenced through static importbr pre import static orgjunitassume assumetrue pre p see a hrefhttpsgithubcomjunitteamjunitwikitheoriestheoriesa since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestFailure.java,3.0,1,returns string containing stack trace error thrown testfailure return a string containing the stack trace of the error thrown by testfailure,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java,2.5,1,dont need create overriding deletion dont need to create a we are overriding deletion,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/function/ThrowingRunnable.java,3.0,1,interface facilitates use expectthrows java allows method references void methods declare checked exceptions passed directly expectthrows without wrapping meant implemented directly since this interface facilitates the use of expectthrows from java it allows method reference to void method that declare checked exception to be passed directly into expectthrows without wrapping it is not meant to be implemented directly since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/RuleMemberValidatorTest.java,0.0,1,property annotated classrule must implement link testrule pthis case added hrefhttpsgithubcomjunitteamjunitissuesissue if there is any property annotated with classrule then it must implement link testrule pthis case ha been added with a hrefhttpsgithubcomjunitteamjunitissuesissue a,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ExpectedException.java,26.5,1,code expectedexception rule allows verify code throws specific exception note starting java link orgjunitassertassertthrowsjavalangclass orgjunitfunctionthrowingrunnable assertassertthrows often better choice since allows express exactly expect exception thrown use link orgjunitassertexpectthrowsjavalangclass orgjunitfunctionthrowingrunnable expectthrows need assert something thrown exception husageh pre public class simpleexpectedexceptiontest amprule public expectedexception thrown expectedexceptionnone amptest throwsnothing exception expected none thrown passes amptest throwsexceptionwithspecifictype thrownexpectnullpointerexceptionclass throw new nullpointerexception pre pyou add code expectedexception rule test doesnt affect existing tests see code throwsnothing specifying type expected exception test successful exception thrown fails different exception thrown pthis rule perform special magic make execution continue exception thrown nearly always mistake test method statements one expected throw exception pinstead specifying exceptions type characterize expected exception based criteria ul lithe exceptions message contains specific text link expectmessagestringli lithe exceptions message complies hamcrest matcher link expectmessagematcherli lithe exceptions cause complies hamcrest matcher link expectcausematcherli lithe exception complies hamcrest matcher link expectmatcherli ul pyou combine presented expectmethods test successful specifications met pre amptest throwsexception thrownexpectnullpointerexceptionclass thrownexpectmessageampquothappenedampquot throw new nullpointerexceptionampquotwhat happenedampquot pre hassumptionviolatedexceptionsh pjunit uses link assumptionviolatedexceptions indicating test provides useful information see link orgjunitassume information call code assume methods set expectations code expectedexception rule case rule handle consume exceptions handled framework eg following test ignored junits default runner pre amptest ignoredbecauseoffailedassumption assumetruefalse throws assumptionviolatedexception thrownexpectnullpointerexceptionclass pre hassertionerrorsh pjunit uses link assertionerrors indicating test failing call code assert methods set expectations code expectedexception rule handled framework eg following test fails code asserttrue statement pre amptest throwsunhandled asserttruefalse throws assertionerror thrownexpectnullpointerexceptionclass pre hmissing exceptionsh pby default missing exceptions reported error message like expected test throw instance foo configure different message means link reportmissingexceptionwithmessagestring use code placeholder description expected exception eg test doesnt throw fail error message test doesnt throw instance foo since the code expectedexception rule allows you to verify that your code throw a specific exception note that starting with java link orgjunitassertassertthrowsjavalangclass orgjunitfunctionthrowingrunnable assertassertthrows is often a better choice since it allows you to express exactly where you expect the exception to be thrown use link orgjunitassertexpectthrowsjavalangclass orgjunitfunctionthrowingrunnable expectthrows if you need to assert something about the thrown exception husageh pre public class simpleexpectedexceptiontest amprule public expectedexception thrown expectedexceptionnone amptest throwsnothing no exception expected none thrown pass amptest throwsexceptionwithspecifictype thrownexpectnullpointerexceptionclass throw new nullpointerexception pre pyou have to add the code expectedexception rule to your test this doesnt affect your existing test see code throwsnothing after specifying the type of the expected exception your test is successful when such an exception is thrown and it fails if a different or no exception is thrown pthis rule doe not perform any special magic to make execution continue a if the exception had not been thrown so it is nearly always a mistake for a test method to have statement after the one that is expected to throw the exception pinstead of specifying the exception type you can characterize the expected exception based on other criterion too ul lithe exception message contains a specific text link expectmessagestringli lithe exception message complies with a hamcrest matcher link expectmessagematcherli lithe exception cause complies with a hamcrest matcher link expectcausematcherli lithe exception itself complies with a hamcrest matcher link expectmatcherli ul pyou can combine any of the presented expectmethods the test is successful if all specification are met pre amptest throwsexception thrownexpectnullpointerexceptionclass thrownexpectmessageampquothappenedampquot throw new nullpointerexceptionampquotwhat happenedampquot pre hassumptionviolatedexceptionsh pjunit us link assumptionviolatedexceptions for indicating that a test provides no useful information see link orgjunitassume for more information you have to call code assume method before you set expectation of the code expectedexception rule in this case the rule will not handle consume the exception and it can be handled by the framework eg the following test is ignored by junits default runner pre amptest ignoredbecauseoffailedassumption assumetruefalse throw assumptionviolatedexception thrownexpectnullpointerexceptionclass pre hassertionerrorsh pjunit us link assertionerrors for indicating that a test is failing you have to call code assert method before you set expectation of the code expectedexception rule if they should be handled by the framework eg the following test fails because of the code asserttrue statement pre amptest throwsunhandled asserttruefalse throw assertionerror thrownexpectnullpointerexceptionclass pre hmissing exceptionsh pby default missing exception are reported with an error message like expected test to throw an instance of foo you can configure a different message by mean of link reportmissingexceptionwithmessagestring you can use a code s placeholder for the description of the expected exception eg test doesnt throw s will fail with the error message test doesnt throw an instance of foo since,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/runner/RequestTest.java,2.5,1,root link description produced link requestclassesclass named classes a root of a link description produced by link requestclassesclass should be named class,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestSuite.java,1.5,1,codetestsuitecode codecompositecode tests runs collection test cases example using dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p alternatively testsuite extract tests run automatically pass class testcase class testsuite constructor pre testsuite suite new testsuitemathtestclass pre p constructor creates suite methods starting test take arguments p final option large array test classes pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre see test a codetestsuitecode is a codecompositecode of test it run a collection of test case here is an example using the dynamic test definition pre testsuite suite new testsuite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero pre p alternatively a testsuite can extract the test to be run automatically to do so you pas the class of your testcase class to the testsuite constructor pre testsuite suite new testsuitemathtestclass pre p this constructor creates a suite with all the method starting with test that take no argument p a final option is to do the same for a large array of test class pre class testclasses mathtestclass anothertestclass testsuite suite new testsuitetestclasses pre see test,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/Failure.java,4.0,1,codefailurecode holds description failed test exception thrown running cases link orgjunitrunnerdescription single test however problems encountered constructing test example link orgjunitbeforeclass method static may describe something single test since a codefailurecode hold a description of the failed test and the exception that wa thrown while running it in most case the link orgjunitrunnerdescription will be of a single test however if problem are encountered while constructing the test for example if a link orgjunitbeforeclass method is not static it may describe something other than a single test since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Description.java,2.0,1,codedescriptioncode describes test run run codedescriptionscode atomic single test compound containing children tests codedescriptionscode used provide feedback tests run example tree view visible many ides tests run example failures view p codedescriptionscode implemented single class rather composite entirely informational contain logic aside counting tests p past used raw link junitframeworktestcases link junitframeworktestsuites display tree tests longer viable junit atomic tests longer superclass link object needed way pass class name together description emerged see orgjunitrunnerrequest see orgjunitrunnerrunner since a codedescriptioncode describes a test which is to be run or ha been run codedescriptionscode can be atomic a single test or compound containing child test codedescriptionscode are used to provide feedback about the test that are about to run for example the tree view visible in many ides or test that have been run for example the failure view p codedescriptionscode are implemented a a single class rather than a composite because they are entirely informational they contain no logic aside from counting their test p in the past we used the raw link junitframeworktestcases and link junitframeworktestsuites to display the tree of test this wa no longer viable in junit because atomic test no longer have a superclass below link object we needed a way to pas a class and name together description emerged from this see orgjunitrunnerrequest see orgjunitrunnerrunner since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunNotifier.java,4.5,1,write custom runners may need notify junit progress running tests invoking coderunnotifiercode passed implementation link orgjunitrunnerrunnerrunrunnotifier future evolution class likely move link firetestrunstarteddescription link firetestrunfinishedresult separate class since called per run since if you write custom runner you may need to notify junit of your progress running test do this by invoking the coderunnotifiercode passed to your implementation of link orgjunitrunnerrunnerrunrunnotifier future evolution of this class is likely to move link firetestrunstarteddescription and link firetestrunfinishedresult to a separate class since they should only be called once per run since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCommandLineParseResult.java,1.5,1,exception used theres problem parsing command line exception used if there a problem parsing the command line,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/Timeout.java,4.5,1,timeout rule applies timeout test methods class pre public static class hasgloballongtimeout amprule public timeout globaltimeout timeoutmillis amptest run throws interruptedexception threadsleep amptest infiniteloop true pre p test run new thread specified timeout elapses test completes execution interrupted via link threadinterrupt happens interruptable io locks methods link object link thread throwing link interruptedexception p specified timeout interpreted set however tests still launch separate threads useful disabling timeouts environments dynamically set based property since the timeout rule applies the same timeout to all test method in a class pre public static class hasgloballongtimeout amprule public timeout globaltimeout timeoutmillis amptest run throw interruptedexception threadsleep amptest infiniteloop while true pre p each test is run in a new thread if the specified timeout elapses before the test completes it execution is interrupted via link threadinterrupt this happens in interruptable io and lock and method in link object and link thread throwing link interruptedexception p a specified timeout of will be interpreted a not set however test will still launch from separate thread this can be useful for disabling timeouts in environment where they are dynamically set based on some property since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/manipulation/Sortable.java,5.0,1,interface runners allow sorting tests sorting tests based last failed recently failed first reduce average time first test failing test sorting used cope order dependencies tests tests isolated less expensive maintain run individually since interface for runner that allow sorting of test by sorting test based on when they last failed most recently failed first you can reduce the average time to the first test failing test sorting should not be used to cope with order dependency between test test that are isolated from each other are le expensive to maintain and can be run individually since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/notification/RunListener.java,7.5,1,register instance class link runnotifier notified events occur test run methods class abstract implementation override one methods receive events p example suppose codecowbellcode class want make noise whenever test fails could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p invoke listener need run tests codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p listener throws exception test event listeners link runlistenertestfailurefailure called code description link descriptiontest_mechanism indicate failure p default junit synchronize calls listener listener threadsafe want allow junit call listener multiple threads tests run parallel annotate test class link runlistenerthreadsafe p listener methods called thread running test unless otherwise indicated method javadoc see orgjunitrunnerjunitcore since register an instance of this class with link runnotifier to be notified of event that occur during a test run all of the method in this class are abstract and have no implementation override one or more method to receive event p for example suppose you have a codecowbellcode class that you want to make a noise whenever a test fails you could write pre public class ringinglistener extends runlistener testfailurefailure failure cowbellring pre p to invoke your listener you need to run your test through codejunitcorecode pre mainstring args junitcore core new junitcore coreaddlistenernew ringinglistener corerunmytestclassclass pre p if a listener throw an exception for a test event the other listener will have their link runlistenertestfailurefailure called with a code description of link descriptiontest_mechanism to indicate the failure p by default junit will synchronize call to your listener if your listener is threadsafe and you want to allow junit to call your listener from multiple thread when test are run in parallel you can annotate your test class with link runlistenerthreadsafe p listener method will be called from the same thread a is running the test unless otherwise indicated by the method javadoc see orgjunitrunnerjunitcore since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java,2.6,1,explicitly set run runner might independently run onetest have to explicitly set run here because the runner might independently run onetest above,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/ErrorCollector.java,4.0,1,errorcollector rule allows execution test continue first problem found example collect _all_ incorrect rows table report pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot lines run combined failure logged end pre since the errorcollector rule allows execution of a test to continue after the first problem is found for example to collect _all_ the incorrect row in a table and report them all at once pre public static class useserrorcollectortwice amprule public errorcollector collector new errorcollector amptest example collectoradderrornew throwableampquotfirst thing went wrongampquot collectoradderrornew throwableampquotsecond thing went wrongampquot collectorcheckthatgetresult notcontainsstringampquoterrorampquot all line will run and then a combined failure logged at the end pre since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/tests/framework/SuiteTest.java,3.0,1,public test case warning nonpublic test case public test case warning for the nonpublic test case,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Test.java,21.0,1,codetestcode annotation tells junit codecode method attached run test case run method junit first constructs fresh instance class invokes annotated method exceptions thrown test reported junit failure exceptions thrown test assumed succeeded p simple test looks like pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p codetestcode annotation supports two optional parameters first codeexpectedcode declares test method throw exception doesnt throw exception throws different exception one declared test fails example following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget pre exceptions message one properties verified link orgjunitrulesexpectedexception expectedexception rule used information exception testing found hrefhttpsgithubcomjunitteamjunitwikiexceptiontestingjunit wikia p second optional parameter codetimeoutcode causes test fail takes longer specified amount clock time measured milliseconds following test fails pre amptestbtimeoutb infinity whiletrue pre bwarningb codetimeoutcode useful catch terminate infinite loops notem considered deterministic following test may may fail depending operating system schedules threads pre amptestbtimeoutb sleep threadsleep pre bthread safety warningb test methods timeout parameter run thread thread runs fixtures methods may yield different behavior code thread safe compared test method without timeout parameter bconsider using link orgjunitrulestimeout rule insteadb ensures test method run thread fixtures methods since the codetestcode annotation tell junit that the codecode method to which it is attached can be run a a test case to run the method junit first construct a fresh instance of the class then invokes the annotated method any exception thrown by the test will be reported by junit a a failure if no exception are thrown the test is assumed to have succeeded p a simple test look like this pre public class example bamptestb method orgjunitassertasserttrue new arraylistisempty pre p the codetestcode annotation support two optional parameter the first codeexpectedcode declares that a test method should throw an exception if it doesnt throw an exception or if it throw a different exception than the one declared the test fails for example the following test succeeds pre amptestbexpectedindexoutofboundsexceptionclassb outofbounds new arraylistampltobjectampgtget pre if the exception message or one of it property should be verified the link orgjunitrulesexpectedexception expectedexception rule can be used further information about exception testing can be found at the a hrefhttpsgithubcomjunitteamjunitwikiexceptiontestingjunit wikia p the second optional parameter codetimeoutcode cause a test to fail if it take longer than a specified amount of clock time measured in millisecond the following test fails pre amptestbtimeoutb infinity whiletrue pre bwarningb while codetimeoutcode is useful to catch and terminate infinite loop it should notem be considered deterministic the following test may or may not fail depending on how the operating system schedule thread pre amptestbtimeoutb sleep threadsleep pre bthread safety warningb test method with a timeout parameter are run in a thread other than the thread which run the fixture before and after method this may yield different behavior for code that is not thread safe when compared to the same test method without a timeout parameter bconsider using the link orgjunitrulestimeout rule insteadb which ensures a test method is run on the same thread a the fixture before and after method since,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/After.java,5.0,1,allocate external resources link orgjunitbefore method need release test runs annotating codecode method codeampaftercode causes method run link orgjunittest method codeampaftercode methods guaranteed run even link orgjunitbefore link orgjunittest method throws exception codeampaftercode methods declared superclasses run current class unless overridden current class p simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest since if you allocate external resource in a link orgjunitbefore method you need to release them after the test run annotating a codecode method with codeampaftercode cause that method to be run after the link orgjunittest method all codeampaftercode method are guaranteed to run even if a link orgjunitbefore or link orgjunittest method throw an exception the codeampaftercode method declared in superclass will be run after those of the current class unless they are overridden in the current class p here is a simple example pre public class example file output ampbefore createoutputfile output new file amptest something ampafter deleteoutputfile outputdelete pre see orgjunitbefore see orgjunittest since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Request.java,3.0,1,create coderequestcode processed run tests class odd name necessary codeclasscode reserved word param clazz class containing tests return coderequestcode cause tests class run create a coderequestcode that when processed will run all the test in a class the odd name is necessary because codeclasscode is a reserved word param clazz the class containing the test return a coderequestcode that will cause all test in the class to be run,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/TemporaryFolder.java,12.5,1,temporaryfolder rule allows creation files folders deleted test method finishes whether passes fails default exception thrown case deletion fails pexample usage pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre ptemporaryfolder rule supports assured deletion mode fail test case deletion fails link assertionerror pcreating temporaryfolder assured deletion pre amprule public temporaryfolder folder temporaryfolderbuilderassuredeletionbuild pre since the temporaryfolder rule allows creation of file and folder that should be deleted when the test method finish whether it pass or fails by default no exception will be thrown in case the deletion fails pexample of usage pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre ptemporaryfolder rule support assured deletion mode which will fail the test in case deletion fails with link assertionerror pcreating temporaryfolder with assured deletion pre amprule public temporaryfolder folder temporaryfolderbuilderassuredeletionbuild pre since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/TestDecorator.java,2.0,1,decorator tests use testdecorator base class defining new test decorators test decorator subclasses introduced add behaviour test run a decorator for test use testdecorator a the base class for defining new test decorator test decorator subclass can be introduced to add behaviour before or after a test is run,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/extensions/ActiveTestSuite.java,2.0,1,inlined due limitation vajavaactivetestsuitesuperruntesttest result inlined due to limitation in vajavaactivetestsuitesuperruntesttest result,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java,3.5,1,creates instance wrapping given statement given timeout milliseconds param statement statement wrap param timeoutmillis timeout milliseconds deprecated use link builder instead creates an instance wrapping the given statement with the given timeout in millisecond param statement the statement to wrap param timeoutmillis the timeout in millisecond deprecated use link builder instead,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java,3.0,1,simple class fail parameters met simple class that should fail because no parameter are met,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java,3.0,1,requires validated member nonstatic requires the validated member to be nonstatic,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AnnotatedBuilder.java,6.25,1,code annotatedbuilder strategy constructing runners test class annotated code runwith annotation tests within class executed using runner specified within annotation p runner supports inner member classes member classes inherit runner enclosing class eg pre amprunwithmyrunnerclass public class mytest tests might go public class mymemberclass amptest thistestrunswith_myrunner test logic tests might go amprunwithanotherrunnerclass public class anothermemberclass tests might go public class deepinnerclass amptest thistestrunswith_anotherrunner test logic public class deepinheritedclass extends supertest amptest thistestrunswith_superrunner test logic amprunwithsuperrunnerclass public class supertest tests might go pre key points note ul liif runwith annotation runner createdli lithe resolve step insideout eg closest runwith annotation winsli lirunwith annotations inherited work class annotated itselfli lithe default junit runner support inner member classes valid custom runners support inner member classesli licustom runners support inner classes may may support runwith annotations member classes please refer custom runner documentationli ul see orgjunitrunnersmodelrunnerbuilder see orgjunitrunnerrunwith since the code annotatedbuilder is a strategy for constructing runner for test class that have been annotated with the code runwith annotation all test within this class will be executed using the runner that wa specified within the annotation p if a runner support inner member class the member class will inherit the runner from the enclosing class eg pre amprunwithmyrunnerclass public class mytest some test might go here public class mymemberclass amptest thistestrunswith_myrunner some test logic some more test might go here amprunwithanotherrunnerclass public class anothermemberclass some test might go here public class deepinnerclass amptest thistestrunswith_anotherrunner some test logic public class deepinheritedclass extends supertest amptest thistestrunswith_superrunner some test logic amprunwithsuperrunnerclass public class supertest some test might go here pre the key point to note here are ul liif there is no runwith annotation no runner will be createdli lithe resolve step is insideout eg the closest runwith annotation winsli lirunwith annotation are inherited and work a if the class wa annotated itselfli lithe default junit runner doe not support inner member class so this is only valid for custom runner that support inner member classesli licustom runner with support for inner class may or may not support runwith annotation for member class please refer to the custom runner documentationli ul see orgjunitrunnersmodelrunnerbuilder see orgjunitrunnerrunwith since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/DisableOnDebug.java,4.0,1,code disableondebug rule allows label certain rules disabled debugging p illustrative use case tests make use link timeout rule ran debug mode test may terminate timeout abruptly debugging developers may disable timeout increase timeout making code change tests need debugging remember revert change afterwards rules link timeout may disabled debugging may wrapped code disableondebug p important benefit feature disable rules without making modifications test class remove debugging p nothing tackle timeouts time sensitive code test debugging may make less useful circumstances p example usage pre public static class disabletimeoutondebugsampletest amprule public testrule timeout new disableondebugnew timeout amptest mytest int assertequals suppose break point inspect pre since the code disableondebug rule allows you to label certain rule to be disabled when debugging p the most illustrative use case is for test that make use of the link timeout rule when ran in debug mode the test may terminate on timeout abruptly during debugging developer may disable the timeout or increase the timeout by making a code change on test that need debugging and remember revert the change afterwards or rule such a link timeout that may be disabled during debugging may be wrapped in a code disableondebug p the important benefit of this feature is that you can disable such rule without any making any modification to your test class to remove them during debugging p this doe nothing to tackle timeouts or time sensitive code under test when debugging and may make this le useful in such circumstance p example usage pre public static class disabletimeoutondebugsampletest amprule public testrule timeout new disableondebugnew timeout amptest mytest int i assertequals i suppose you had a break point here to inspect i pre since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/Money.java,3.0,1,makes sense void appendtomoneybag this make no sense void appendtomoneybag m,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/MethodRulesTest.java,2.5,1,multiple public methods annotated rule returning link methodrule rules returned run pthis case added hrefhttpsgithubcomjunitteamjunitissuesissue support rule methods works testrule methodrule if there are multiple public method annotated with rule returning a link methodrule then all the rule returned should be run pthis case ha been added with a hrefhttpsgithubcomjunitteamjunitissuesissue a support rule for method work only for testrule but not for methodrule,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/BeforeClass.java,9.5,1,sometimes several tests need share computationally expensive setup like logging database compromise independence tests sometimes necessary optimization annotating codepublic static voidcode noarg method codebeforeclasscode causes run test methods class codebeforeclasscode methods superclasses run current class unless shadowed current class p example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass since sometimes several test need to share computationally expensive setup like logging into a database while this can compromise the independence of test sometimes it is a necessary optimization annotating a codepublic static voidcode noarg method with codebeforeclasscode cause it to be run once before any of the test method in the class the codebeforeclasscode method of superclass will be run before those of the current class unless they are shadowed in the current class p for example pre public class example ampbeforeclass public static void onlyonce amptest one amptest two pre see orgjunitafterclass since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/running/core/SystemExitTest.java,1.5,1,make sure systemexit works expected weve problems platforms make sure systemexit work a expected weve had problem with this on some platform,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxCore.java,3.5,1,create new maxcore serialized file stored storedresults deprecated use storedlocally create a new maxcore from a serialized file stored at storedresults deprecated use storedlocally,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/runners/Enclosed.java,2.5,1,put tests inner classes ant example wont find running outer class enclosed tests inner classes run might put tests inner classes group convenience share constants abstract inner classes ignored p example pre amprunwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind abstract public static class ignored pre if you put test in inner class ant for example wont find them by running the outer class with enclosed the test in the inner class will be run you might put test in inner class to group them for convenience or to share constant abstract inner class are ignored p so for example pre amprunwithenclosedclass public class listtests useful shared stuff public static class onekindoflisttest public static class anotherkind abstract public static class ignored pre,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestCase.java,4.0,1,test case defines fixture run multiple tests define test casebr ol liimplement subclass codetestcasecodeli lidefine instance variables store state fixtureli liinitialize fixture state overriding link setupli licleanup test overriding link teardownli ol test runs fixture side effects among test runs example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre test implement method interacts fixture verify expected results assertions specified calling link junitframeworkassertasserttruestring boolean boolean pre testadd double result fvalue fvalue asserttrueresult pre methods defined run framework supports static type safe dynamic way run test static way override runtest method define method invoked convenient way anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre dynamic way uses reflection implement link runtest dynamically finds invokes method case name test case correspond test method run pre testcase test new mathtesttestadd testrun pre tests run collected testsuite junit provides different itest runnersi run test suite collect results test runner either expects static method codesuitecode entry point get test run extract suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite a test case defines the fixture to run multiple test to define a test casebr ol liimplement a subclass of codetestcasecodeli lidefine instance variable that store the state of the fixtureli liinitialize the fixture state by overriding link setupli licleanup after a test by overriding link teardownli ol each test run in it own fixture so there can be no side effect among test run here is an example pre public class mathtest extends testcase protected double fvalue protected double fvalue protected void setup fvalue fvalue pre for each test implement a method which interacts with the fixture verify the expected result with assertion specified by calling link junitframeworkassertasserttruestring boolean with a boolean pre testadd double result fvalue fvalue asserttrueresult pre once the method are defined you can run them the framework support both a static type safe and more dynamic way to run a test in the static way you override the runtest method and define the method to be invoked a convenient way to do so is with an anonymous inner class pre testcase test new mathtestadd runtest testadd testrun pre the dynamic way us reflection to implement link runtest it dynamically find and invokes a method in this case the name of the test case ha to correspond to the test method to be run pre testcase test new mathtesttestadd testrun pre the test to be run can be collected into a testsuite junit provides different itest runnersi which can run a test suite and collect the result a test runner either expects a static method codesuitecode a the entry point to get a test to run or it will extract the suite automatically pre public static test suite suiteaddtestnew mathtesttestadd suiteaddtestnew mathtesttestdividebyzero return suite pre see testresult see testsuite,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/textui/TestRunner.java,2.5,1,command line based tool run tests pre java junittextuitestrunner wait testcaseclass pre p testrunner expects name testcase class argument class defines static codesuitecode method invoked returned test run otherwise methods starting test arguments run p wait command line argument given testrunner waits users types return p testrunner prints trace tests executed followed summary end a command line based tool to run test pre java junittextuitestrunner wait testcaseclass pre p testrunner expects the name of a testcase class a argument if this class defines a static codesuitecode method it will be invoked and the returned test is run otherwise all the method starting with test having no argument are run p when the wait command line argument is given testrunner wait until the user type return p testrunner print a trace a the test are executed followed by a summary at the end,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/CategoryValidator.java,2.5,1,validates errors use code category annotation code throwable object added list errors since validates that there are no error in the use of the code category annotation if there is a code throwable object will be added to the list of error since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/TestCouldNotBeSkippedException.java,7.0,1,indicates test indicated skipped could skipped thrown test uses methods link assume indicate skipped processing test completed failures occured see orgjunitassume since indicates that a test that indicated that it should be skipped could not be skipped this can be thrown if a test us the method in link assume to indicate that it should be skipped but before processing of the test wa completed other failure occured see orgjunitassume since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/TestListener.java,3.0,1,error occurred an error occurred,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java,2.0,1,likewise testclass must passed allmemberssupplier annotation parsing costly likewise the testclass must be passed into allmemberssupplier or the annotation parsing is again costly,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/ParentRunner.java,0.0,1,provides functionality specific runner implements parent node test tree children defined objects data type code link blockjunitclassrunner code link method link suite code link class subclasses must implement finding children node describing child running child parentrunner filter sort children handle code beforeclass code afterclass methods handle annotated link classrules create composite link description run children sequentially since provides most of the functionality specific to a runner that implement a parent node in the test tree with child defined by object of some data type code t for link blockjunitclassrunner code t is link method for link suite code t is link class subclass must implement finding the child of the node describing each child and running each child parentrunner will filter and sort child handle code beforeclass and code afterclass method handle annotated link classrules create a composite link description and run child sequentially since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Assert.java,2.0,1,set assertion methods useful writing tests failed assertions recorded methods used directly codeassertassertequalscode however read better referenced static import pre import static orgjunitassert assertequals pre see assertionerror since a set of assertion method useful for writing test only failed assertion are recorded these method can be used directly codeassertassertequalscode however they read better if they are referenced through static import pre import static orgjunitassert assertequals pre see assertionerror since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/Parameterized.java,24.2,1,custom runner codeparameterizedcode implements parameterized tests running parameterized test class instances created crossproduct test methods test data elements p example test codecode operator write pre amprunwithparameterizedclass public class additiontest ampparametersname ampquotindex ampquot public static iterableampltobjectampgt data return arraysaslistnew object private int firstsummand private int secondsummand private int sum public additiontestint firstsummand int secondsummand int sum thisfirstsummand firstsummand thissecondsummand secondsummand thissum sum amptest test assertequalssum firstsummand secondsummand pre p instance codeadditiontestcode constructed using threeargument constructor data values codeampparameterscode method p order easily identify individual tests may provide name codeampparameterscode annotation name allowed contain placeholders replaced runtime placeholders dl dtindexdt ddthe current parameter indexdd dtdt ddthe first parameter valuedd dtdt ddthe second parameter valuedd dtdt dddd dl p example given codeparameterizedcode runner creates names like code code dont use name parameter current parameter index used name p also write pre amprunwithparameterizedclass public class additiontest ampparametersname ampquotindex ampquot public static iterableampltobjectampgt data return arraysaslistnew object ampparameter public int firstsummand ampparameter public int secondsummand ampparameter public int sum amptest test assertequalssum firstsummand secondsummand pre p instance codeadditiontestcode constructed default constructor fields annotated codeampparametercode initialized data values codeampparameterscode method p parameters provided array pre ampparameters public static object data return new object pre htests single parameterh p test needs single parameter dont wrap array instead provide codeiterablecode array objects pre ampparameters public static iterableamplt extends objectampgt data return arraysaslistampquotfirst testampquot ampquotsecond testampquot pre p pre ampparameters public static object data return new object ampquotfirst testampquot ampquotsecond testampquot pre hexecuting code beforeafter executing tests specific parametersh p test needs perform preparation cleanup based parameters done adding public static methods annotated code beforeparamcode afterparam methods either parameters parameters test pre ampbeforeparam public static void beforetestsforparameterstring onlyparameter systemoutprintlntesting onlyparameter pre hcreate different runnersh p default code parameterized runner creates slightly modified link blockjunitclassrunner set parameters build code parameterized runner creates another runner set parameters therefore build link parametersrunnerfactory creates runner link testwithparameters code testwithparameters bundling parameters test name factory must public zeroarg constructor pre public class yourrunnerfactory implements parametersrunnerfactory public runner createrunnerfortestwithparameterstestwithparameters test throws initializationerror return yourrunnertest pre p use link useparametersrunnerfactory tell code parameterized runner use factory pre amprunwithparameterizedclass ampuseparametersrunnerfactoryyourrunnerfactoryclass public class yourtest pre since the custom runner codeparameterizedcode implement parameterized test when running a parameterized test class instance are created for the crossproduct of the test method and the test data element p for example to test the codecode operator write pre amprunwithparameterizedclass public class additiontest ampparametersname ampquotindex ampquot public static iterableampltobjectampgt data return arraysaslistnew object private int firstsummand private int secondsummand private int sum public additiontestint firstsummand int secondsummand int sum thisfirstsummand firstsummand thissecondsummand secondsummand thissum sum amptest test assertequalssum firstsummand secondsummand pre p each instance of codeadditiontestcode will be constructed using the threeargument constructor and the data value in the codeampparameterscode method p in order that you can easily identify the individual test you may provide a name for the codeampparameterscode annotation this name is allowed to contain placeholder which are replaced at runtime the placeholder are dl dtindexdt ddthe current parameter indexdd dtdt ddthe first parameter valuedd dtdt ddthe second parameter valuedd dtdt dddd dl p in the example given above the codeparameterizedcode runner creates name like code code if you dont use the name parameter then the current parameter index is used a name p you can also write pre amprunwithparameterizedclass public class additiontest ampparametersname ampquotindex ampquot public static iterableampltobjectampgt data return arraysaslistnew object ampparameter public int firstsummand ampparameter public int secondsummand ampparameter public int sum amptest test assertequalssum firstsummand secondsummand pre p each instance of codeadditiontestcode will be constructed with the default constructor and field annotated by codeampparametercode will be initialized with the data value in the codeampparameterscode method p the parameter can be provided a an array too pre ampparameters public static object data return new object pre htests with single parameterh p if your test need a single parameter only you dont have to wrap it with an array instead you can provide an codeiterablecode or an array of object pre ampparameters public static iterableamplt extends objectampgt data return arraysaslistampquotfirst testampquot ampquotsecond testampquot pre p or pre ampparameters public static object data return new object ampquotfirst testampquot ampquotsecond testampquot pre hexecuting code beforeafter executing test for specific parametersh p if your test need to perform some preparation or cleanup based on the parameter this can be done by adding public static method annotated with code beforeparamcode afterparam such method should either have no parameter or the same parameter a the test pre ampbeforeparam public static void beforetestsforparameterstring onlyparameter systemoutprintlntesting onlyparameter pre hcreate different runnersh p by default the code parameterized runner creates a slightly modified link blockjunitclassrunner for each set of parameter you can build an own code parameterized runner that creates another runner for each set of parameter therefore you have to build a link parametersrunnerfactory that creates a runner for each link testwithparameters code testwithparameters are bundling the parameter and the test name the factory must have a public zeroarg constructor pre public class yourrunnerfactory implement parametersrunnerfactory public runner createrunnerfortestwithparameterstestwithparameters test throw initializationerror return yourrunnertest pre p use the link useparametersrunnerfactory to tell the code parameterized runner that it should use your factory pre amprunwithparameterizedclass ampuseparametersrunnerfactoryyourrunnerfactoryclass public class yourtest pre since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkMethod.java,2.5,1,need return previouslyencountered bridge method junit wont able call parent method parent class isnt public we need to return the previouslyencountered bridge method because junit wont be able to call the parent method because the parent class isnt public,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/RuleChain.java,2.0,1,rulechain rule allows ordering testrules create code rulechain link outerruletestrule subsequent calls link aroundtestrule pre public class userulechain amprule public rulechain chain rulechain outerrulenew loggingruleouter rule aroundnew loggingrulemiddle rule aroundnew loggingruleinner rule amptest example asserttruetrue pre writes log pre starting outer rule starting middle rule starting inner rule finished inner rule finished middle rule finished outer rule pre code rulechain cannot used define order existing rules example snippet loggingrule code middle would executed outside well inside code rulechain pre amprule public loggingrule middle new loggingrulemiddle rule amprule public rulechain chain rulechain outerrulenew loggingruleouter rule aroundmiddle aroundnew loggingruleinner rule pre since the rulechain rule allows ordering of testrules you create a code rulechain with link outerruletestrule and subsequent call of link aroundtestrule pre public class userulechain amprule public rulechain chain rulechain outerrulenew loggingruleouter rule aroundnew loggingrulemiddle rule aroundnew loggingruleinner rule amptest example asserttruetrue pre writes the log pre starting outer rule starting middle rule starting inner rule finished inner rule finished middle rule finished outer rule pre code rulechain cannot be used to define the order of existing rule for example in the below snippet the loggingrule code middle would be executed outside a well a inside the code rulechain pre amprule public loggingrule middle new loggingrulemiddle rule amprule public rulechain chain rulechain outerrulenew loggingruleouter rule aroundmiddle aroundnew loggingruleinner rule pre since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java,2.5,1,nothing input arguments null failure do nothing input argument will be null on failure,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/rules/MethodRule.java,7.0,1,methodrule alteration test method run reported multiple link methodrules applied test method link statement executes method passed annotated link rule turn may return substitute modified link statement passed next link rule example useful see link testwatchman pnote link methodrule replaced link testrule added benefit supporting class rules since a methodrule is an alteration in how a test method is run and reported multiple link methodrules can be applied to a test method the link statement that executes the method is passed to each annotated link rule in turn and each may return a substitute or modified link statement which is passed to the next link rule if any for an example of how this can be useful see link testwatchman pnote that link methodrule ha been replaced by link testrule which ha the added benefit of supporting class rule since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/TestClass.java,7.5,1,creates code testclass wrapping code clazz time constructor executes class scanned annotations expensive process hope future jdks therefore try share instances code testclass possible creates a code testclass wrapping code clazz each time this constructor executes the class is scanned for annotation which can be an expensive process we hope in future jdks it will not be therefore try to share instance of code testclass where possible,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/junit/framework/Protectable.java,2.0,1,protectableem run throw throwable see testresult a protectableem can be run and can throw a throwable see testresult,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/requests/ClassRequest.java,3.0,1,use f prefix intellijs junitideatestrunner uses reflection access field see httpsgithubcomjunitteamjunitissues we have to use the f prefix because intellijs junitideatestrunner us reflection to access this field see httpsgithubcomjunitteamjunitissues,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/internal/Assignments.java,2.5,1,potentially incomplete list value assignments methods formal parameters a potentially incomplete list of value assignment for a method formal parameter,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java,2.0,1,integration tests found link orgjunittestsrunningmethodsexpectedtest see eg link orgjunittestsrunningmethodsexpectedtestexpectsassumptionviolatedexception integration test can be found in link orgjunittestsrunningmethodsexpectedtest see eg link orgjunittestsrunningmethodsexpectedtestexpectsassumptionviolatedexception,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java,2.0,1,link blockjunitclassrunner parameters support parameters injected via constructor annotated fields a link blockjunitclassrunner with parameter support parameter can be injected via constructor or into annotated field,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java,6.5,1,convenient base class matchers require nonnull value specific type simply implements null check checks type casts author joe walnes deprecated please use link orghamcresttypesafematcher convenient base class for matcher that require a nonnull value of a specific type this simply implement the null check check the type and then cast author joe walnes deprecated please use link orghamcresttypesafematcher,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/results/ResultMatchers.java,6.0,1,instantiate deprecated private soon do not instantiate deprecated will be private soon,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/AssumptionViolatedException.java,5.5,1,exception class used implement iassumptionsi state given test meaningful executed test assumption fails generate test case failure see orgjunitassume an exception class used to implement iassumptionsi state in which a given test is meaningful and should or should not be executed a test for which an assumption fails should not generate a test case failure see orgjunitassume,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/RunnerScheduler.java,5.5,1,represents strategy scheduling individual test methods run serial parallel warning still experimental may go away since represents a strategy for scheduling when individual test method should be run in serial or parallel warning still experimental may go away since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/samples/money/IMoney.java,5.5,1,append moneybag appendto needs public used polymorphically used clients modifies argument append this to a moneybag m appendto need to be public because it is used polymorphically but it should not be used by client because it modifies the argument m,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/JUnitSystem.java,2.5,1,removed next major release will be removed in the next major release,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/DataPoints.java,10.0,1,annotating array iterabletyped field method ampdatapoints cause values array iterable given used potential parameters theories class run link orgjunitexperimentaltheoriestheories theories runner p datapoints considered potential values parameters types assignable multiple sets datapoints exist overlapping types control obtained naming datapoints using value annotation eg codeampdatapointsdataset datasetcode specifying named set consider potential values parameter using link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameters specified source ie without ampfromdatapoints link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotations use datapoints assignable parameter type potential values including named sets datapoints p datapoints methods whose array types arent assignable target parameter type cant possibly return relevant values called generating values parameter iterabletyped datapoints methods must always called though information available generic type erasure expensive methods returning iterable datapoints bad idea pre ampdatapoints public static string datapoints new string ampdatapoints public static string generateddatapoints return new string amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints annotating an array or iterabletyped field or method with ampdatapoints will cause the value in the array or iterable given to be used a potential parameter for theory in that class when run with the link orgjunitexperimentaltheoriestheories theory runner p datapoints will only be considered a potential value for parameter for which their type are assignable when multiple set of datapoints exist with overlapping type more control can be obtained by naming the datapoints using the value of this annotation eg with codeampdatapointsdataset datasetcode and then specifying which named set to consider a potential value for each parameter using the link orgjunitexperimentaltheoriesfromdatapoints ampfromdatapoints annotation p parameter with no specified source ie without ampfromdatapoints or other link orgjunitexperimentaltheoriesparameterssuppliedby ampparametersuppliedby annotation will use all datapoints that are assignable to the parameter type a potential value including named set of datapoints p datapoints method whose array type arent assignable from the target parameter type and so cant possibly return relevant value will not be called when generating value for that parameter iterabletyped datapoints method must always be called though a this information is not available here after generic type erasure so expensive method returning iterable datapoints are a bad idea pre ampdatapoints public static string datapoints new string ampdatapoints public static string generateddatapoints return new string amptheory theorymethodstring param pre see orgjunitexperimentaltheoriestheories see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesfromdatapoints,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ArrayComparisonFailure.java,3.0,1,construct new codearraycomparisonfailurecode error text arrays dimension equal param cause exception caused arrays content fail assertion test param index array position objects equal see assertassertarrayequalsstring object object construct a new codearraycomparisonfailurecode with an error text and the array dimension that wa not equal param cause the exception that caused the array content to fail the assertion test param index the array position of the object that are not equal see assertassertarrayequalsstring object object,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/DisableOnDebugTest.java,2.5,1,nasty rule always fails nasty rule that always fails,-1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Ignore.java,4.5,1,sometimes want temporarily disable test group tests methods annotated link orgjunittest also annotated codeampignorecode executed tests also annotate class containing test methods codeampignorecode none containing tests executed native junit test runners report number ignored tests along number tests ran number tests failed pfor example pre ampignore amptest something pre ampignore takes optional default parameter want record test ignored pre ampignorenot ready yet amptest something pre ampignore also applied test class pre ampignore public class ignoreme amptest test amptest test pre since sometimes you want to temporarily disable a test or a group of test method annotated with link orgjunittest that are also annotated with codeampignorecode will not be executed a test also you can annotate a class containing test method with codeampignorecode and none of the containing test will be executed native junit test runner should report the number of ignored test along with the number of test that ran and the number of test that failed pfor example pre ampignore amptest something pre ampignore take an optional default parameter if you want to record why a test is being ignored pre ampignorenot ready yet amptest something pre ampignore can also be applied to the test class pre ampignore public class ignoreme amptest test amptest test pre since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/matchers/JUnitMatchers.java,3.5,1,convenience import class useful matchers use assertthat method currently included basic corematchers class hamcrest since deprecated use code orghamcrestjunitjunitmatchers convenience import class these are useful matcher for use with the assertthat method but they are not currently included in the basic corematchers class from hamcrest since deprecated use code orghamcrestjunitjunitmatchers,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java,2.5,1,nothing methods null failure do nothing the method will be null on failure,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Runner.java,5.0,1,coderunnercode runs tests notifies link orgjunitrunnernotificationrunnotifier significant events need subclass coderunnercode using link orgjunitrunnerrunwith invoke custom runner creating custom runner addition implementing abstract methods must also provide constructor takes argument link class containing tests pthe default runner implementation guarantees instances test case class constructed immediately running test runner retain reference test case instances generally making available garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith since a coderunnercode run test and notifies a link orgjunitrunnernotificationrunnotifier of significant event a it doe so you will need to subclass coderunnercode when using link orgjunitrunnerrunwith to invoke a custom runner when creating a custom runner in addition to implementing the abstract method here you must also provide a constructor that take a an argument the link class containing the test pthe default runner implementation guarantee that the instance of the test case class will be constructed immediately before running the test and that the runner will retain no reference to the test case instance generally making them available for garbage collection see orgjunitrunnerdescription see orgjunitrunnerrunwith since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/experimental/categories/MultiCategoryTest.java,2.0,1,test mentioned code categories changes must reflected this test is mentioned in code category and any change must be reflected,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/JUnitCore.java,0,0,,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java,2.0,1,runner testing override link orgjunitrunnersblockjunitclassrunnercreatetestorgjunitrunnersmodelframeworkmethod setting link orgjunitrunnersmodelframeworkmethod field test class compared test method executed runner for testing override of link orgjunitrunnersblockjunitclassrunnercreatetestorgjunitrunnersmodelframeworkmethod by setting the link orgjunitrunnersmodelframeworkmethod in a field of the test class so it can be compared with the test method that is being executed,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java,0.0,1,must show stack trace must show up in stack trace,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java,10.0,1,implements junit standard test case class model defined annotations orgjunit package many users never notice class default test class runner exactly behavior old test class runner code junitclassrunner p blockjunitclassrunner advantages writers custom junit runners slight changes default behavior however ul liit much simpler implementation based link statements allowing new operations inserted appropriate point execution flow liit published extension reuse encouraged whereas code junitclassrunner internal package deprecated ul p turn introduced link rules many cases extending blockjunitclassrunner necessary add new behavior link rules used makes extension reusable composable since implement the junit standard test case class model a defined by the annotation in the orgjunit package many user will never notice this class it is now the default test class runner but it should have exactly the same behavior a the old test class runner code junitclassrunner p blockjunitclassrunner ha advantage for writer of custom junit runner that are slight change to the default behavior however ul liit ha a much simpler implementation based on link statement allowing new operation to be inserted into the appropriate point in the execution flow liit is published and extension and reuse are encouraged whereas code junitclassrunner wa in an internal package and is now deprecated ul p in turn in we introduced link rule in many case where extending blockjunitclassrunner wa necessary to add new behavior link rule can be used which make the extension more reusable and composable since,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java,3.5,1,deprecated used link alldefaultpossibilitiesbuilder deprecated used link alldefaultpossibilitiesbuilder,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/ClassRoadie.java,6.0,1,deprecated included backwards compatibility junit removed next major release please use link blockjunitclassrunner place link junitclassrunner deprecated included for backwards compatibility with junit will be removed in the next major release please use link blockjunitclassrunner in place of link junitclassrunner,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/max/MaxHistory.java,2.5,1,loads link maxhistory code file generates new one saved code file load a link maxhistory from code file or generates a new one that will be saved to code file,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/FromDataPoints.java,9.0,1,annotating parameter link orgjunitexperimentaltheoriestheory amptheory method codeampfromdatapointscode limit datapoints considered potential values parameter link orgjunitexperimentaltheoriesdatapoints datapoints given name datapoint names given value parameter ampdatapoints annotation p datapoints without names considered values parameters annotated ampfromdatapoints pre ampdatapoints public static string unnamed new string ampdatapointsregexes public static string regexstrings new string ampdatapointsformatching alphanumeric public static string teststrings new string amptheory stringtheorystring param called every value regexstrings teststrings unnamed amptheory regextheoryampfromdatapointsregexes string regex ampfromdatapointsformatching string value called values regexstrings regex values teststrings value none values unnamed pre see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesdatapoints annotating a parameter of a link orgjunitexperimentaltheoriestheory amptheory method with codeampfromdatapointscode will limit the datapoints considered a potential value for that parameter to just the link orgjunitexperimentaltheoriesdatapoints datapoints with the given name datapoint name can be given a the value parameter of the ampdatapoints annotation p datapoints without name will not be considered a value for any parameter annotated with ampfromdatapoints pre ampdatapoints public static string unnamed new string ampdatapointsregexes public static string regexstrings new string ampdatapointsformatching alphanumeric public static string teststrings new string amptheory stringtheorystring param this will be called with every value in regexstrings teststrings and unnamed amptheory regextheoryampfromdatapointsregexes string regex ampfromdatapointsformatching string value this will be called with only the value in regexstrings a regex only the value in teststrings a value and none of the value in unnamed pre see orgjunitexperimentaltheoriestheory see orgjunitexperimentaltheoriesdatapoint see orgjunitexperimentaltheoriesdatapoints,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/junit/tests/runner/ResultTest.java,2.0,1,version code result returns hardcoded runtime makes values returned methods deterministic a version of code result that return a hardcoded runtime this make value returned by the method deterministic,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runner/Result.java,2.5,1,coderesultcode collects summarizes information running multiple tests tests counted additional information collected tests fail since a coderesultcode collect and summarizes information from running multiple test all test are counted additional information is collected from test that fail since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/Rule.java,15.5,1,annotates fields reference rules methods return rule field must public static subtype link orgjunitrulestestrule preferred link orgjunitrulesmethodrule method must public static must return subtype link orgjunitrulestestrule preferred link orgjunitrulesmethodrule p link orgjunitrunnersmodelstatement passed link orgjunitrulestestrule run link methods link test method finally link methods throwing exception fail multiple annotated link rules class applied order methods first fields however multiple fields methods applied order depends jvms implementation reflection api undefined general rules defined fields always applied rules defined methods ie statements returned former executed around returned latter use link orgjunitrulesrulechain want control order rules applied p example test class creates temporary folder test method deletes pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p using method pre public static class hastempfolder private temporaryfolder folder new temporaryfolder amprule public temporaryfolder getfolder return folder amptest testusingtempfolder throws ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p information examples see link orgjunitrulestestrule since annotates field that reference rule or method that return a rule a field must be public not static and a subtype of link orgjunitrulestestrule preferred or link orgjunitrulesmethodrule a method must be public not static and must return a subtype of link orgjunitrulestestrule preferred or link orgjunitrulesmethodrule p the link orgjunitrunnersmodelstatement passed to the link orgjunitrulestestrule will run any link before method then the link test method and finally any link after method throwing an exception if any of these fail if there are multiple annotated link rule on a class they will be applied in order of method first then field however if there are multiple field or method they will be applied in an order that depends on your jvms implementation of the reflection api which is undefined in general rule defined by field will always be applied after rule defined by method ie the statement returned by the former will be executed around those returned by the latter you can use a link orgjunitrulesrulechain if you want to have control over the order in which the rule are applied p for example here is a test class that creates a temporary folder before each test method and deletes it after each pre public static class hastempfolder amprule public temporaryfolder folder new temporaryfolder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p and the same using a method pre public static class hastempfolder private temporaryfolder folder new temporaryfolder amprule public temporaryfolder getfolder return folder amptest testusingtempfolder throw ioexception file createdfile foldernewfileampquotmyfiletxtampquot file createdfolder foldernewfolderampquotsubfolderampquot pre p for more information and more example see link orgjunitrulestestrule since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/theories/Theories.java,14.5,1,theories runner allows test certain functionality subset infinite set data points p theory piece functionality method executed several data inputs called data points make test method theory mark bamptheoryb create data point create public field test class mark bampdatapointb theories runner executes test method many times number data points declared providing different data point input argument invocation p p theory differs standard test method captures aspect intended behavior possibly infinite numbers scenarios corresponds number data points declared using assumptions assertions properly together covering multiple scenarios different data points make tests flexible bring closer scientific theories hence name p p example pre amprunwithbtheoriesclassb public class usertest bampdatapointb public static string good_username optimus bampdatapointb public static string username_with_slash optimusprime bamptheoryb filenameincludesusernamestring username assumethatusername notcontainsstring assertthatnew userusernameconfigfilename containsstringusername pre makes clear username included config file name doesnt contain slash another test theory might define happens username contain slash codeusertestcode attempt run codefilenameincludesusernamecode every compatible data point defined class assumptions fail data point silently ignored assumptions pass assertion fails test fails parameters found satisfy assumptions test fails p defining general statements theories allows data point reuse across bunch functionality tests also allows automated tools search new unexpected data points expose bugs p p support theories absorbed popper project complete documentation found projects archived documentation p see hrefhttpwebarchiveorgwebpoppertigrisorgtutorialhtmlarchived popper project documentationa see hrefhttpwebarchiveorgwebhttpshareandenjoysaffnettddspecificationspdfpaper theoriesa the theory runner allows to test a certain functionality against a subset of an infinite set of data point p a theory is a piece of functionality a method that is executed against several data input called data point to make a test method a theory you mark it with bamptheoryb to create a data point you create a public field in your test class and mark it with bampdatapointb the theory runner then executes your test method a many time a the number of data point declared providing a different data point a the input argument on each invocation p p a theory differs from standard test method in that it capture some aspect of the intended behavior in possibly infinite number of scenario which corresponds to the number of data point declared using assumption and assertion properly together with covering multiple scenario with different data point can make your test more flexible and bring them closer to scientific theory hence the name p p for example pre amprunwithbtheoriesclassb public class usertest bampdatapointb public static string good_username optimus bampdatapointb public static string username_with_slash optimusprime bamptheoryb filenameincludesusernamestring username assumethatusername notcontainsstring assertthatnew userusernameconfigfilename containsstringusername pre this make it clear that the username should be included in the config file name only if it doesnt contain a slash another test or theory might define what happens when a username doe contain a slash codeusertestcode will attempt to run codefilenameincludesusernamecode on every compatible data point defined in the class if any of the assumption fail the data point is silently ignored if all of the assumption pas but an assertion fails the test fails if no parameter can be found that satisfy all assumption the test fails p defining general statement a theory allows data point reuse across a bunch of functionality test and also allows automated tool to search for new unexpected data point that expose bug p p the support for theory ha been absorbed from the popper project and more complete documentation can be found from that project archived documentation p see a hrefhttpwebarchiveorgwebpoppertigrisorgtutorialhtmlarchived popper project documentationa see a hrefhttpwebarchiveorgwebhttpshareandenjoysaffnettddspecificationspdfpaper on theoriesa,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/runners/model/FrameworkField.java,0.0,1,represents field test class currently used rules link blockjunitclassrunner custom runners make uses since represents a field on a test class currently used only for rule in link blockjunitclassrunner but custom runner can make other us since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/experimental/categories/Categories.java,2.0,1,given set test classes runs classes methods annotated either category given includecategory annotation subtype category p note annotating suites code category effect categories must annotated direct method class p example pre public interface fasttests public interface slowtests public interface smoketests public static class amptest fail ampcategoryslowtestsclass amptest b ampcategoryfasttestsclass smoketestsclass amptest c ampcategoryslowtestsclass fasttestsclass public static class b amptest amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclassesaclass bclass note categories kind suite public static class slowtestsuite run ab bd aa ac pre p example run multiple categories pre amprunwithcategoriesclass ampincludecategoryfasttestsclass smoketestsclass ampsuiteclassesaclass bclass public static class fastorsmoketestsuite run ac bd ab fasttests smoketests pre version see hrefhttpsgithubcomjunitteamjunitwikicategoriescategories junit wikia from a given set of test class run only the class and method that are annotated with either the category given with the includecategory annotation or a subtype of that category p note that for now annotating suite with code category ha no effect category must be annotated on the direct method or class p example pre public interface fasttests public interface slowtests public interface smoketests public static class a amptest a fail ampcategoryslowtestsclass amptest b ampcategoryfasttestsclass smoketestsclass amptest c ampcategoryslowtestsclass fasttestsclass public static class b amptest d amprunwithcategoriesclass ampincludecategoryslowtestsclass ampsuiteclassesaclass bclass note that category is a kind of suite public static class slowtestsuite will run ab and bd but not aa and ac pre p example to run multiple category pre amprunwithcategoriesclass ampincludecategoryfasttestsclass smoketestsclass ampsuiteclassesaclass bclass public static class fastorsmoketestsuite will run ac and bd but not ab because it is not any of fasttests or smoketests pre version see a hrefhttpsgithubcomjunitteamjunitwikicategoriescategories at junit wikia,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java,3.5,1,deprecated simple smoke test make sure old junitclassrunner basically works delete test junitclassrunner goes great heap sky deprecated this is a simple smoke test to make sure the old junitclassrunner basically work delete this test when junitclassrunner go to the great heap in the sky,1
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/runners/model/EachTestNotifier.java,2.5,1,calls link runnotifierfiretestsuitestarteddescription passing link description passed code eachtestnotifier constructor called test suite started see runnotifierfiretestsuitestarteddescription since call link runnotifierfiretestsuitestarteddescription passing the link description that wa passed to the code eachtestnotifier constructor this should be called when a test suite is about to be started see runnotifierfiretestsuitestarteddescription since,0
master,2018-02-21,5a932d02b8a9f956ba503603,src/main/java/org/junit/internal/ComparisonCriteria.java,0,0,,0
